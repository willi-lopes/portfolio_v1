{"version":3,"sources":["scorm-localstorage-service.js","AcessibilityDisplayControll.js","Base.js","BehaviorAdaptative.js","Collection.js","debug.js","eventemitter.js","FixSize.js","ReturnModal.js","Helpers.js","SCORM_API_wrapper.js","Screen.js","ViewController.js","WaterMark.js"],"names":["QUIZES","__e","core","PASSED","this","require","self","window","Buffer","arguments","COMPLETED","vsWTKb","4","module","exports","process","global","__argument0","__argument1","__argument2","__argument3","__filename","__dirname","BROWSED","NOT_ATTEMPTED","fn","that","length","aFunction","undefined","SCORM_API","SUSPEND_DATA","LESSON_STATUS","a","LESSON_LOCATION","SCORE","b","LocstorService","_classCallCheck","call","c","_createClass","value","apply","init","get","5","localStorage","getItem","Object","defineProperty","buffer","6","key","getObject","document","is","isObject","createElement","it","./_is-object","7","quit","name","source","out","exp","console","type","$export","F","IS_GLOBAL","G","IS_PROTO","P","IS_BIND","B","PersistanceFake","S","PROTOTYPE","log","target","own","ctx","Function","redefine","U","hide","expProto","W","R","./_ctx","./_global","./_hide","./_redefine","8","exec","e","set","9","toString","objects","10","setObject","Math","__g","11","loadObject","hasOwnProperty","saveQuiz","quizes","saveObject","object","dP","f","createDesc","./_object-dp","./_property-desc","13","getQuizCollection","setCompleted","setLessonStatus","14","15","16","anObject","PersistanceService","toPrimitive","locstor","O","Attributes","persistance","temp_suspend_data","IE8_DOM_DEFINE","TypeError","./_an-object","./_descriptors","./_ie8-dom-define","./_to-primitive","17","bitmap","configurable","writable","18","SRC","$toString","TO_STRING","split","val","safe","isFunction","has","TPL","join","String","./_has","./_uid","19","SHARED","store","push","20","valueOf","21","concat","id","px","22","navigator","userAgent","23","time","boundArgs","args","slice","ScormAPIService","status","MSIE","setTimeout","setInterval","scorm","pipwerks","SCORM","./_user-agent","24","hasDataToSave","_typeof","obj","Symbol","iterator","constructor","prototype","instance","Constructor","_defineProperties","props","i","descriptor","enumerable","_toPropertyKey","protoProps","staticProps","arg","_toPrimitive","input","hint","prim","Number","res","stringify","response","setItem","AcessibilityDisplayControll","acessibilityConfig","_acessibilityConfig","msie","indexOf","acess_root_el","acessibility_elements","appendChild","textContent","autoStyle","Base","element","children","Collection","STATUS","_engine_config","_this","_window","engine_config","$","scaleTransformAll","currentHeight","availableHeight","innerHeight","domRect","positionX","positionY","bgImage","proportional","scaleX","div","find","replacedBG","position_type","save","debug","isActive","documentElement","viewport","setAttribute","css","suspend_data","JSON","currentWidth","parse","styleSheets","font_size_older","font_size_px","font_size_new","_document","styleSheet","number","ruleStyle","cssText","j","match","getElementsByClassName","n","addEventListener","click","style","visibility","total","outlines","head","assign","screen","model","uid","list","removeChild","count","prev","BehaviorAdaptative","first","removeMediaQueries","index","body","base","resize","behaviors","width","height","innerWidth","scaleY","min","_key","temp","callback","data","Debuggy","fullBg","classe","createDiv","classList","background-size","divArrow","innerHTML","pages","controls","title","top","makeButton","button","min-height","-webkit-transform","-webkit-transform-origin","btn","-webkit-box-shadow","box-shadow","min-width","readAllScreens","createDebugBtns","getBoundingClientRect","clientWidth","clientHeight","view","clearStorage","clear","location","reload","background-position","left","round","openclose","toggle","VIEW_EVENT","LOAD_END","position","bottom","insertBefore","debugOn","idx","found","each","EventEmitter","fontSize","events","CSSMediaRule","event","emit","listeners","cssRules","rules","deleteRule","removeListener","inner","offsetHeight","outer","parentNode","fixElementHeight","el","startAt","fixSections","section_elements","next","_listenner","done","FixSize","pathfix","path","shuffle","array","arrtemp","models","shuffledIMap","ReturnModal","config","_config","onfinished","_onfinished","susppend_data","splice","getKeyIndex","add","text","telaatual","onclick","g_dtmInitialized","connection","handleCompletionStatus","forEach","handleExitMode","isCollection","parent","version","completionStatus","exitStatus","isAvailable","on","main","querySelector","childNodes","g_nFindAPITries","API","findAttempts","findAttemptLimit","traceMsgPrefix","trace","Array","haystack","needle","win","opener","listener","once","g","pagepath","errorCode","isFound","hasBug","buttons_elements","getElementsByTagName","l","bug","success","makeBoolean","lmsConfig","startTimer","lesson_location","addModal","objConfig","UTILS","modalVoltar","StringToBoolean","color","msg","yes","no","fadeOut","setTimer","getHandle","Date","waterMark","fullscreen_elements","contentWindow","handle","parameter","AlertUserOfAPIError","g_strAPITooDeep","err","API_1484_11","dtm","getTime","totalDuration","initialize","cmi","lms","LMSInitialize","Initialize","getCode","code","parseInt","GetLastError","getInfo","terminate","result","GetErrorString","LMSFinish","Terminate","LMSGetValue","firebug","_console","GetValue","setTime","getMilliseconds","substr","hms","Screen","behaviorsAdaptive","fixSize","LMSSetValue","SetValue","returnModal","MillisecondsToCMIDuration","shuffleThe","indexMap","saveData","loadData","LMSCommit","Commit","action","needToPickASample","src","pageToReturn","current","LMSGetLastError","findIndex","getCurrentScreen","getDiagnosticInfo","walkFix","direction","LMSGetDiagnostic","GetDiagnostic","nextScreen","nextIndex","walk","last","string","indexClampLimit","Boolean","minLimit","h","m","getMinutes","s","getSeconds","property","cs","behaviorAdapt","fullScreenControll","acessibilityDisplayControll","warn","level","isRoot","map","floor","random","READY","LOAD_START","LOADED_SCREEN_LIMIT","waitForEl","_SCREEN_IS_LOADING","sample","selector","ViewController","_super","_Base","loadFirst","bridge","hiddeViewsFromReaderScreen","elements","maxLimit","full_element","preventDefault","fullscreenElement","exitFullscreen","webkitExitFullscreen","msExitFullscreen","requestFullscreen","_this2","webkitRequestFullscreen","selectPage","elem","pageToReturnCondition","attr","p","loadPageEvents","isSimpleScreen","current_uid","loadScreen","firstScreen","remove","trigger","enterView","exitView","navigationDirection","lastLoadedScreen","lastIndex","getPageIndexById","inject","indexIsOutLimits","bind","currentScreen","currentScreenUid","pagesTotal","pageIndexConfigPosition","_this3","currentSlide","nextSlide","onready","acessibility","adaptive","WaterMark","addWaterMark","index_base","_setPrototypeOf","o","setPrototypeOf","__proto__","_createSuper","getMaxZIndex","hasNativeReflectConstruct","getComputedStyle","zIndex","Reflect","construct","sham","Proxy","Super","_getPrototypeOf","Derived","NewTarget","_assertThisInitialized","_toConsumableArray","querySelectorAll","filter","getPrototypeOf","waterText","arrObjectsToDeph","subClass","superClass","create"],"mappings":"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","file":"engine.min.js","sourcesContent":["const QUIZES = \"quizes\";\r\nconst STATUS = {\r\n    PASSED: \"passed\",\r\n    COMPLETED: \"completed\",\r\n    FAILED: \"failed\",\r\n    INCOMPLETE: \"incomplete\",\r\n    BROWSED: \"browsed\",\r\n    NOT_ATTEMPTED: \"not attempted\"\r\n};\r\n\r\nconst SCORM_API = {\r\n    SUSPEND_DATA: \"cmi.suspend_data\",\r\n    LESSON_STATUS: \"cmi.core.lesson_status\",\r\n    LESSON_LOCATION: \"cmi.core.lesson_location\",\r\n    SCORE: \"cmi.core.score.raw\"\r\n};\r\n\nclass LocstorService {\r\n    constructor() {\r\n        this.name = 'localStorage';\r\n    }\r\n\r\n    init() {\r\n        return true;\r\n    }\r\n\r\n    get(key) {\r\n        return localStorage.getItem(key);\r\n    }\r\n\r\n    set(key, value) {\r\n        localStorage.setItem(key, value);\r\n        return true;\r\n    }\r\n    getObject(key) {\r\n        return JSON.parse(this.get(key));\r\n    }\r\n    setObject(key, value) {\r\n        this.set(key, JSON.stringify(value));\r\n        return true;\r\n    }\r\n    save() {\r\n        console.log('trying to save...');\r\n        return true;\r\n    }\r\n    quit() {\r\n        console.log('trying to quit...');\r\n    }\r\n}\nclass PersistanceFake {\r\n\tstatic Create() {\r\n\t\treturn new PersistanceFake();\r\n\t}\r\n\tconstructor() {\r\n\t\tthis.name = \"PersistanceFake\";\r\n\t\tthis.db = {};\r\n\t\tconsole.log(`%c* Persistance - ${this.name} * `, \"font-weight:bold; color:purple\");\r\n\t}\r\n\r\n\tinit() {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tget(key) {\r\n\t\treturn this.db[key];\r\n\t}\r\n\r\n\tset(key, value) {\r\n\t\tthis.db[key] = value;\r\n\t\tconsole.log(\"PersistanceFake >>\", key, value);\r\n\t}\r\n\r\n\tsave() {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tquit() {\r\n\t\tconsole.log(\"PersistanceFake >> quit\");\r\n\t\treturn true;\r\n\t}\r\n\r\n\tgetObject(key) {\r\n\t\treturn this.get(key);\r\n\t}\r\n\r\n\tsetObject(key, value) {\r\n\t\tthis.set(key, value);\r\n\t}\r\n\r\n\tsaveObject(key, value) {\r\n\t\tlet objects = this.getObject(SCORM_API.SUSPEND_DATA) || {};\r\n\t\tobjects[key] = value;\r\n\t\tthis.setObject(SCORM_API.SUSPEND_DATA, objects);\r\n\t}\r\n\r\n\tremoveObject(key) {\r\n\t\tlet objects = this.getObject(SCORM_API.SUSPEND_DATA) || {};\r\n\t\tdelete objects[key];\r\n\t\tthis.setObject(SCORM_API.SUSPEND_DATA, objects);\r\n\t}\r\n\r\n\tloadObject(key) {\r\n\t\tlet objects = this.getObject(SCORM_API.SUSPEND_DATA) || {};\r\n\t\treturn objects[key];\r\n\t}\r\n\r\n\tsaveQuiz(key, value) {\r\n\t\tlet quizes = this.loadObject(QUIZES) || {};\r\n\t\tquizes[key] = value;\r\n\t\tthis.saveObject(QUIZES, quizes);\r\n\t}\r\n\r\n\tloadQuiz(key) {\r\n\t\tlet quizes = this.loadObject(QUIZES) || {};\r\n\t\treturn quizes[key];\r\n\t}\r\n\r\n\tgetQuizCollection() {\r\n\t\treturn this.loadObject(QUIZES);\r\n\t}\r\n\r\n\tsetCompleted() {\r\n\t\tthis.setLessonStatus(STATUS.COMPLETED);\r\n\t}\r\n\r\n\tsetLessonStatus(status) {\r\n\t\tthis.set(SCORM_API.LESSON_STATUS, status);\r\n\t}\r\n}\nclass PersistanceService {\r\n\tstatic Create() {\r\n\t\tpipwerks.debug.isActive = false;\r\n\t\treturn new PersistanceService(new ScormAPIService(), new LocstorService());\r\n\t}\r\n\tconstructor(scorm, locstor) {\r\n\t\tthis.scorm = scorm;\r\n\t\tthis.locstor = locstor;\r\n\t\tthis.persistance = this.scorm.ready ? this.scorm : this.locstor;\r\n\t\tthis.temp_suspend_data = null;\r\n\t\t\r\n\t\t// console.log(`%c* Persistance - ${this.persistance.name} * `, \"font-weight:bold; color:purple\");\r\n\t}\r\n\t// inicializa scorm\r\n\tinit() {\r\n\t\treturn this.persistance.init();\r\n\t}\r\n\t// retorna dados direto do scorm\r\n\tget(key) {\r\n\t\t// console.log(\"GET-PERSISTENCE\", key);\r\n\t\treturn this.persistance.get(key);\r\n\t}\r\n\t// salva dados direto no scorm\r\n\tset(key, value) {\r\n\t\treturn this.persistance.set(key, value);\r\n\t}\r\n\t// commit do scorm\r\n\tsave() {\r\n\t\treturn this.persistance.save();\r\n\t}\r\n\t//scorm quit\r\n\tquit() {\r\n\t\tthis.persistance.quit();\r\n\t}\r\n\t// retorna dados do scorm passados pelo JSON.parse\r\n\tgetObject(key) {\r\n\t\t// console.log(\"GET-PERSISTENCE-OBJECT\", key);\r\n\t\treturn this.persistance.getObject(key);\r\n\t}\r\n\t// salva dados no scorm passados pelo JSON.stringify\r\n\tsetObject(key, value) {\r\n\t\treturn this.persistance.setObject(key, value);\r\n\t}\r\n\r\n\tsaveObject(key, value) {\r\n\t\tlet objects;\r\n\r\n\t\tif(this.temp_suspend_data == null){\r\n\t\t\tobjects = this.persistance.getObject(SCORM_API.SUSPEND_DATA) || {};\r\n\t\t\tthis.temp_suspend_data = objects;\r\n\t\t}else{\r\n\t\t\tobjects = this.temp_suspend_data;\r\n\t\t}\r\n\r\n\t\tobjects[key] = value;\r\n\t\tthis.temp_suspend_data = objects;\r\n\t\tthis.persistance.setObject(SCORM_API.SUSPEND_DATA, objects);\r\n\t\t\r\n\t}\r\n\r\n\tremoveObject(key) {\r\n\r\n\t\tlet objects;\r\n\r\n\t\tif(this.temp_suspend_data == null){\r\n\t\t\tobjects = this.persistance.getObject(SCORM_API.SUSPEND_DATA) || {};\r\n\t\t\tthis.temp_suspend_data = objects;\r\n\t\t}else{\r\n\t\t\tobjects = this.temp_suspend_data;\r\n\t\t}\r\n\r\n\t\tdelete objects[key];\r\n\t\tthis.temp_suspend_data = objects;\r\n\t\tthis.persistance.setObject(SCORM_API.SUSPEND_DATA, objects);\r\n\t}\r\n\r\n\tloadObject(key) {\r\n\t\t\r\n\t\tlet objects;\r\n\r\n\t\tif(this.temp_suspend_data == null){\r\n\t\t\tobjects = this.persistance.getObject(SCORM_API.SUSPEND_DATA) || {};\r\n\t\t\tthis.temp_suspend_data = objects;\r\n\t\t}else{\r\n\t\t\tobjects = this.temp_suspend_data;\r\n\t\t}\r\n\r\n\t\treturn objects[key];\r\n\t}\r\n\r\n\tsaveQuiz(key, value) {\r\n\t\tlet quizes = this.loadObject(QUIZES) || {};\r\n\t\tquizes[key] = value;\r\n\t\tthis.saveObject(QUIZES, quizes);\r\n\t}\r\n\r\n\tloadQuiz(key) {\r\n\t\tlet quizes = this.loadObject(QUIZES) || {};\r\n\t\treturn quizes[key];\r\n\t}\r\n\r\n\tgetQuizCollection() {\r\n\t\treturn this.loadObject(QUIZES);\r\n\t}\r\n\r\n\tsetCompleted() {\r\n\t\tthis.setLessonStatus(STATUS.COMPLETED);\r\n\t\tthis.persistance.save();\r\n\t}\r\n\r\n\tsetLessonStatus(status) {\r\n\t\tthis.set(SCORM_API.LESSON_STATUS, status);\r\n\t}\r\n}\nclass ScormAPIService {\r\n    constructor() {\r\n        this.name = 'scorm';\r\n        this.scorm = pipwerks.SCORM;\r\n        this.ready = this.init();\r\n        this.hasDataToSave = false;\r\n    }\r\n\r\n    saveData(key, value) {\r\n        this.suspend_data[key] = value;\r\n        this.set(SCORM_API.SUSPEND_DATA, JSON.stringify(this.suspend_data));\r\n    }\r\n\r\n    getData(key) {\r\n        //console.log(\"GET-DATA-SERVICE\", key);\r\n        return this.suspend_data[key];\r\n    }\r\n\r\n    init() {\r\n        return this.scorm.init();\r\n    }\r\n\r\n    get(key) {\r\n        //console.log(\"GET-SERVICE\", key);\r\n        return this.scorm.get(key);\r\n    }\r\n\r\n    set(key, value) {\r\n        // console.log(\"SET-OBJECT-SERVICE\", key);\r\n        let response = this.scorm.set(key, value);\r\n        this.hasDataToSave = true;\r\n\r\n        return response;\r\n    }\r\n\r\n    getObject(key) {\r\n        // console.log(\"GET-OBJECT-SERVICE\", key);\r\n        return JSON.parse(this.get(key) || \"{}\");\r\n    }\r\n\r\n    setObject(key, value) {\r\n        return this.set(key, JSON.stringify(value));\r\n    }\r\n    \r\n    save() {\r\n\r\n        if(this.hasDataToSave){\r\n            this.hasDataToSave = false;\r\n            this.scorm.save();\r\n        }\r\n        \r\n    }\r\n\r\n    quit() {\r\n        this.scorm.quit();\r\n    }\r\n}","class AcessibilityDisplayControll {\r\n\r\n    constructor(_window, _document, _acessibilityConfig) {\r\n        this.window = _window;\r\n        this.document = _document\r\n        this.acessibilityConfig = _acessibilityConfig;\r\n    }\r\n        \r\n    \r\n    init(){\r\n        var autoStyle = \"\";\r\n        var ua = this.window.navigator.userAgent;\r\n        var msie = ua.indexOf(\"MSIE \");\r\n\r\n        if(this.acessibilityConfig.tools == false || msie > 0 || !!navigator.userAgent.match(/Trident.*rv\\:11\\./)){\r\n            autoStyle += `\r\n                ._access-icon{\r\n                    display:none!important;\r\n                }\r\n\r\n                .acessibility_controll{\r\n                    display:none!important;\r\n                }\r\n            `;\r\n\r\n            \r\n        }else{\r\n\r\n            var acessibility_elements = this.document.getElementsByClassName(\"acessibility_controll\");\r\n            var acess_root_el = this.document.getElementsByClassName(\"_access-icon\");\r\n       \r\n            setTimeout(() => { \r\n                \r\n                if(acessibility_elements.length > 0 && acess_root_el.length > 0){\r\n                    for(var n=0; n<acessibility_elements.length;n++){\r\n                        var acess_el = acessibility_elements[n];\r\n                        acess_el.addEventListener(\"click\", function () {\r\n                            acess_root_el[0].click();\r\n                        });\r\n                    }\r\n                }else if(acess_root_el.length > 0 && acessibility_elements.length == 0){\r\n                    acess_root_el[0].style.visibility = \"visible\";\r\n                }\r\n\r\n                \r\n             }, 4000);\r\n\r\n        }\r\n\r\n       \r\n\r\n        if(!this.acessibilityConfig.outlines){\r\n            autoStyle += `\r\n                *{\r\n                    outline:none!important;\r\n                }\r\n            `;\r\n        }\r\n\r\n        this.document.head.appendChild(Object.assign(this.document.createElement(\"style\"), {textContent: autoStyle}));\r\n     \r\n    }\r\n    \r\n}\r\n","class Base {\r\n    constructor(element) {\r\n        this.element = element;\r\n        this.children = new Collection();\r\n    }\r\n    \r\n    appendChild(screen) {\r\n        this.children.set(screen.model.uid, screen);\r\n        this.element.appendChild(screen.element);\r\n    }\r\n\r\n    removeChild(screen) {\r\n        this.element.removeChild(this.children.delete(screen.model.uid).element);\r\n    }\r\n\r\n    removeChildFirst() {\r\n        this.element.removeChild(this.children.delete('_first').element);\r\n    }\r\n\r\n    removeChildLast() {\r\n        this.element.removeChild(this.children.delete('_last').element);\r\n    }\r\n}","var _engine_config;\r\nvar _this;\r\n\r\nclass BehaviorAdaptative {\r\n\r\n    constructor(_window, _document) {\r\n\r\n        this.window = _window;\r\n        this.document = _document;\r\n        _this = this;\r\n        \r\n    }\r\n\r\n    behaviorAdapt(engine_config) {\r\n\r\n        var autoStyle = \"\";\r\n\r\n        _engine_config = engine_config;\r\n        this.removeMediaQueries();\r\n\r\n        \r\n        autoStyle += `\r\n            * {\r\n                text-rendering: optimizeLegibility;\r\n                -webkit-font-smoothing: antialiased;\r\n                -moz-osx-font-smoothing: grayscale;\r\n                // -ms-flex-wrap: nowrap;\r\n                // flex-wrap: nowrap; \r\n            }\r\n        `;\r\n       \r\n\r\n        this.document.head.appendChild(Object.assign(this.document.createElement(\"style\"), {textContent: autoStyle}))\r\n\r\n        // $(this.document.body).find(\"*\").css(\"-ms-flex-wrap\", \"nowrap\");\r\n        // $(this.document.body).find(\"*\").css(\"flex-wrap\", \"nowrap\");\r\n        $(this.document.body).find(\"*\").css(\"-webkit-font-smoothing\", \"antialiased\");\r\n        $(this.document.body).find(\"*\").css(\"-moz-osx-font-smoothing\", \"grayscale\");\r\n        $(this.document.body).find(\"*\").css(\"text-rendering\", \"optimizeLegibility\");\r\n\r\n        $('html').css(\"height\", \"-webkit-fill-available\");\r\n        $(this.document).find('html').css(\"height\", \"-webkit-fill-available\");\r\n\r\n\r\n\r\n        $( this.window ).resize(function() {\r\n            _this.scaleTransformAll($(this.document.body));\r\n        });\r\n\r\n        this.scaleTransformAll($(this.document.body));\r\n\r\n    }\r\n\r\n   \r\n\r\n    scaleTransformAll(div){\r\n       \r\n        var proportional = true; \r\n        var currentWidth = _engine_config.behaviors.width;\r\n        var currentHeight = _engine_config.behaviors.height;\r\n        var availableHeight = this.window.innerHeight;\r\n        var availableWidth = this.window.innerWidth;\r\n        var scaleX = availableWidth / currentWidth;\r\n        var scaleY = availableHeight / currentHeight;\r\n        var domRect;\r\n        var positionX;\r\n        var positionY;\r\n        var viewport;\r\n        var bgImage;\r\n        var replacedBG;\r\n        \r\n        if (proportional) {\r\n            scaleX = Math.min(scaleX, scaleY);\r\n            scaleY = scaleX;\r\n        }\r\n        \r\n        \r\n        \r\n\r\n        div.find(\".simplePage\").find(\".container-template-wildcard\").find(\".row-wrap:first-child\").css({\"height\":currentHeight + \"px\"});\r\n        div.find(\".simplePage\").css({\"height\":currentHeight + \"px\"});\r\n        div.find(\".full-H\").css({\"height\":currentHeight + \"px\"});\r\n        div.find(\".col-bg\").css({\"height\":currentHeight + \"px\"});\r\n        \r\n\r\n\r\n\r\n        if($(div.find(\".simplePage\").find(\".container-template-wildcard\")[0]).css(\"background-image\") != \"none\"){\r\n            bgImage = $(div.find(\".simplePage\").find(\".container-template-wildcard\")[0]).css(\"background-image\");\r\n        }else if( $(div.find(\".simplePage\").find(\".container-template-exercise-quiz\")[0]).css(\"background-image\") != \"none\"){\r\n            bgImage =  $(div.find(\".simplePage\").find(\".container-template-exercise-quiz\")[0]).css(\"background-image\");\r\n        }else{\r\n            bgImage = \"none\";\r\n        }\r\n\r\n\r\n        replacedBG = $(div.find(\".simplePage\").find(\".container-template-wildcard\")[0]).data(\"replacedBg\");\r\n\r\n\r\n        var position_type;\r\n\r\n        if(div.find(\".simplePage\").length > 0){\r\n            position_type = \"fixed\";\r\n        }else if(div.find(\".onePage\").length > 0){\r\n            position_type = \"relative\";\r\n        }\r\n\r\n        if(bgImage!=\"none\"  && _engine_config.behaviors.fullBg == true || replacedBG == true){\r\n            \r\n            if(replacedBG!=true){\r\n\r\n                $(div).css({\"background-image\":bgImage,\r\n                            \"background-size\": \"cover\",\r\n                            \"background-repeat\": \"no-repeat\",\r\n                            // \"background-position\":\"center center\",\r\n                            // \"background-position\":\"0 0\"\r\n                           });\r\n\r\n\r\n                $(div.find(\".simplePage\").find(\".container-template-wildcard\")[0]).data(\"replacedBg\", true);\r\n                $(div.find(\".simplePage\").find(\".container-template-wildcard\")[0]).css(\"background-image\", \"\");\r\n                \r\n\r\n            }\r\n          \r\n            \r\n            // position_type\r\n            div.css({\r\n                \"position\": `${position_type}`,\r\n                \"left\": \"0px\",\r\n                \"top\": \"0px\",\r\n                \"min-width\": currentWidth + \"px\",\r\n                \"min-height\": currentHeight + \"px\",\r\n                \"-webkit-transform\": \"translate(\" + 0 + \"px, \"\r\n                                                + 0 + \"px) scale3d(\"\r\n                                                + scaleX + \", \" + scaleY + \", 1)\",\r\n                \"-webkit-transform-origin\": \"0 0\"\r\n            }); \r\n\r\n        }else{\r\n\r\n            div.css({\r\n                \"position\": `${position_type}`,\r\n                \"-webkit-box-shadow\": \"0px 0px 14px 6px rgba(0,0,0,0.44)\", \r\n                \"box-shadow\": \"0px 0px 14px 6px rgba(0,0,0,0.44)\",\r\n                \"left\": \"0px\",\r\n                \"top\": \"0px\",\r\n                \"min-width\": currentWidth + \"px\",\r\n                \"min-height\": currentHeight + \"px\",\r\n                \"-webkit-transform\": \"translate(\" + 0 + \"px, \"\r\n                                                + 0 + \"px) scale3d(\"\r\n                                                + scaleX + \", \" + scaleY + \", 1)\",\r\n                \"-webkit-transform-origin\": \"0 0\"\r\n            }); \r\n\r\n        }\r\n\r\n        \r\n\r\n\r\n        _this.changeFontSize(_engine_config);\r\n\r\n        domRect = this.document.body.getBoundingClientRect();\r\n        positionX = (this.document.documentElement.clientWidth/2) - (domRect.width/2);\r\n        positionY = (this.document.documentElement.clientHeight/2) - (domRect.height/2);\r\n        viewport = document.querySelector(\"meta[name=viewport]\");\r\n        viewport.setAttribute('content', 'width=' + domRect.width +', height=' + domRect.height + ', initial-scale=1.0, maximum-scale=1.0, user-scalable=0');\r\n\r\n\r\n\r\n        if(div.find(\".simplePage\").length > 0){\r\n            $(div).css({\r\n                \"background-position\":`0px ${positionY}px`,\r\n                \"left\":`${positionX}px`,\r\n                \"top\":`${positionY}px`\r\n            });\r\n\r\n        }else if(div.find(\".onePage\").length > 0){\r\n            $(div).css({\r\n                \"background-position\":`0px ${positionY}px`,\r\n                \"left\":`${positionX}px`,\r\n                \"top\":`0px`\r\n            });\r\n\r\n           \r\n\r\n            div.css({\r\n                // \"height\":`${domRect.height/scaleY}px`\r\n                \r\n                \r\n            });\r\n        }\r\n\r\n        \r\n\r\n        if(_engine_config.behaviors.fullBg == true ){\r\n\r\n            $(div).find('.component-template-header').css({\r\n                \"left\":`${-Math.round(positionX/scaleX)}px`,\r\n                \"width\":`${this.document.documentElement.clientWidth/scaleX}px`\r\n            });\r\n\r\n            $(div).find('.modal').css({\r\n                \"left\":`${-Math.round(positionX/scaleX)}px`,\r\n                \"width\":`${this.document.documentElement.clientWidth/scaleX}px`\r\n            });\r\n\r\n            $(div).find('.container-interaction-arrows').css({\r\n                \"left\":`${-Math.round(positionX/scaleX)}px`,\r\n                \"width\":`${this.document.documentElement.clientWidth/scaleX}px`,\r\n                \"position\": \"fixed\",\r\n                \"bottom\": 0,\r\n                \"display\": \"flex\",\r\n                \"justify-content\": \"space-between\"\r\n            });\r\n\r\n            \r\n            $(div).find('.container-arrow').css({\r\n                \"position\": \"relative\"\r\n            });\r\n        }\r\n\r\n        $(div).find('.col-bg-int').css({\r\n            \"width\":`${currentWidth/2}px`\r\n        });\r\n\r\n        \r\n\r\n        \r\n    \r\n    }\r\n\r\n    // getParentSize(element, ref){\r\n        \r\n    //     if(ref == \"width\"){\r\n    //         if(element.parent().width() <= 0){\r\n    //             _this.getParentSize(element, ref);\r\n    //         }else{\r\n    //             return element.parent().width();\r\n    //         }\r\n    //     }else if(ref == \"height\"){\r\n    //         if(element.parent().height() <= 0){\r\n    //             _this.getParentSize(element, ref);\r\n    //         }else{\r\n    //             return element.parent().height();\r\n    //         }\r\n    //     }\r\n        \r\n    // }\r\n\r\n    changeFontSize(engine_config){\r\n        $(this.document).find('p,h1,h2,h3,h4,h5,i,b,stronger,small').each(function(){\r\n            var font_size_older; \r\n            var font_size_new;\r\n            var font_size_px;\r\n\r\n            if($(this).data('fontRef') != undefined || $(this).data('fontRef') != null){\r\n                font_size_older = $(this).data('fontRef');\r\n            }else{\r\n                font_size_older = $(this).css('font-size');\r\n            }\r\n\r\n            \r\n            $(this).data('fontRef', font_size_older);\r\n            font_size_px = Math.round(font_size_older.split(\"px\")[0]);\r\n\r\n            var fonteMedia = (font_size_px + engine_config.behaviors.fontSize) /2;\r\n            font_size_new = fonteMedia * 0.063;\r\n\r\n            $(this).css('font-size', font_size_new + \"rem\");\r\n               \r\n            \r\n        });\r\n    }\r\n\r\n    removeRule() {\r\n        if (typeof _this.window.CSSMediaRule !== 'function') {\r\n            return false;\r\n        }\r\n        var styleSheets = _this.document.styleSheets;\r\n        var number = 0;\r\n    \r\n        if (!styleSheets) {\r\n            return false;\r\n        }\r\n    \r\n        for (var i = 0; i < styleSheets.length; i++) {\r\n            var styleSheet = styleSheets[i];\r\n            var rules = styleSheet.cssRules;\r\n            if (!rules) {\r\n                continue;\r\n            }\r\n            for (var j = 0; j < rules.length; j++) {\r\n                var cssText = rules[j].cssText;\r\n                var ruleStyle = rules[j].style;\r\n                \r\n                if (cssText.indexOf('@media') === 0) {\r\n                    number++;\r\n                    styleSheet.deleteRule(j);\r\n                }\r\n            }\r\n        }\r\n        if (number) {\r\n            return number;\r\n        }\r\n        return 0;\r\n    }\r\n    \r\n    removeMediaQueries() {\r\n        var num = _this.removeRule();\r\n        var total = num;\r\n        while (num) {\r\n            num = _this.removeRule();\r\n            total += num;\r\n        }\r\n        if (total) {\r\n            // console.info(total + ' media quer' + (total == 1 ? 'y' : 'ies' + ' removed'));\r\n        } else {\r\n            // console.info('No media queries removed');\r\n        }\r\n    }\r\n\r\n    \r\n\r\n}","/*\r\n    Class Collection\r\n    It's a indexed Map!\r\n*/\r\nclass Collection {\r\n\r\n    constructor() {\r\n        this.base = new Map();\r\n        this.list = [];\r\n        console.log(this[Symbol.iterator]);\r\n        this[Symbol.iterator] = this.iterator;\r\n    }\r\n\r\n    iterator(startAt) {\r\n        if (typeof startAt == \"string\") {\r\n            startAt = this.list.indexOf(startAt);\r\n        }\r\n        let count = startAt || 0;\r\n        return {\r\n            next: () => {\r\n                let result = count < this.list.length ? {\r\n                    value: this.base.get(this.list[count++]),\r\n                    done: false\r\n                } : {\r\n                    done: true\r\n                };\r\n                return result;\r\n            },\r\n            prev: () => {\r\n                let result = count > 0 ? {\r\n                    value: this.base.get(this.list[--count]),\r\n                    done: false\r\n                } : {\r\n                    done: true\r\n                };\r\n                return result;\r\n            }\r\n        };\r\n    }\r\n\r\n    indexOf(key) {\r\n        if (typeof key == \"string\") {\r\n            return this.list.indexOf(key);\r\n        }\r\n        return key;\r\n    }\r\n\r\n    first() {\r\n        return this.get('_first');\r\n    }\r\n\r\n    last() {\r\n        return this.get('_last');\r\n    }\r\n\r\n    shift() {\r\n\r\n    }\r\n\r\n    get(key) {\r\n        var index = this.getKeyIndex(key);\r\n        if (index > this.list.length - 1) {\r\n            index = this.list.length - 1;\r\n        }\r\n        if (index < 0) {\r\n            index = 0;\r\n        }\r\n        return this.base.get(this.list[index]);\r\n    }\r\n\r\n    nextOf(key) {\r\n        return this.get(this.indexOf(key) + 1);\r\n    }\r\n\r\n    prevOf(key) {\r\n        return this.get(this.indexOf(key) - 1);\r\n    }\r\n\r\n    set(key, value) {\r\n        if (this.list.indexOf(key) == -1) {\r\n            this.base.set(key, value);\r\n            this.list.push(key);\r\n        }\r\n    }\r\n\r\n    getKeyIndex(_key) {\r\n        var i = this.list.indexOf(_key);\r\n        if (_key == \"_first\") i = 0;\r\n        if (_key == \"_last\") i = this.list.length - 1;\r\n        return i;\r\n    }\r\n\r\n    delete(_key) {\r\n        var temp = this.get(_key);\r\n        this.base.delete(this.list.splice(this.getKeyIndex(_key), 1).join(''));\r\n        return temp;\r\n    }\r\n\r\n    forEach(callback) {\r\n        this.base.forEach(callback);\r\n    }\r\n\r\n    get length() {\r\n        return this.list.length;\r\n    }\r\n\r\n}\r\n","function Debuggy(view) {\r\n\r\n    function createDiv(classe, text) {\r\n        let div = document.createElement('div');\r\n        div.classList.add(classe);\r\n        if (text) {\r\n            div.textContent = text;\r\n        }\r\n\r\n        return div;\r\n    }\r\n\r\n    \r\n\r\n    let openclose = createDiv('openclose');\r\n    let divArrow = createDiv('arrow-round');\r\n    \r\n    divArrow.innerHTML += `<svg version=\"1.1\" id=\"Icons\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n    viewBox=\"0 0 32 32\" style=\"enable-background:new 0 0 32 32;\" xml:space=\"preserve\">\r\n<style type=\"text/css\">\r\n   .st0{fill:#FFFFFF;}\r\n</style>\r\n<path class=\"st0\" d=\"M28.2,23.8l-4.5-4.5l0,0c0.9-1.6,1.3-3.4,1.3-5.3c0-6.1-4.9-11-11-11S3,7.9,3,14s4.9,11,11,11\r\n   c1.9,0,3.7-0.5,5.3-1.3l0,0l4.5,4.5c0.6,0.6,1.4,0.9,2.2,0.9s1.6-0.3,2.2-0.9C29.4,27,29.4,25,28.2,23.8z M21,15h-2.1\r\n   c-0.1,0.6-0.4,1.2-0.7,1.8l1.5,1.5c0.4,0.4,0.4,1,0,1.4C19.5,19.9,19.3,20,19,20s-0.5-0.1-0.7-0.3l-1.5-1.5C16,18.7,15,19,14,19\r\n   s-2-0.3-2.8-0.8l-1.5,1.5C9.5,19.9,9.3,20,9,20s-0.5-0.1-0.7-0.3c-0.4-0.4-0.4-1,0-1.4l1.5-1.5c-0.3-0.5-0.6-1.1-0.7-1.8H7\r\n   c-0.6,0-1-0.4-1-1s0.4-1,1-1h2.1c0.1-0.6,0.4-1.2,0.7-1.8L8.3,9.7c-0.4-0.4-0.4-1,0-1.4c0.4-0.4,1-0.4,1.4,0l1.5,1.5\r\n   c0.3-0.2,0.5-0.3,0.8-0.4c0-0.1,0-0.3,0-0.4c0-1.1,0.9-2,2-2s2,0.9,2,2c0,0.1,0,0.3,0,0.4c0.3,0.1,0.5,0.3,0.8,0.4l1.5-1.5\r\n   c0.4-0.4,1-0.4,1.4,0c0.4,0.4,0.4,1,0,1.4l-1.5,1.5c0.3,0.5,0.6,1.1,0.7,1.8H21c0.6,0,1,0.4,1,1S21.6,15,21,15z\"/>\r\n</svg>`;\r\n    openclose.appendChild(divArrow);\r\n    \r\n\r\n    let telaatual = createDiv('telaatual');\r\n    let debug = createDiv('debug');\r\n    let pages = createDiv('pages');\r\n    let controls = createDiv('controls');\r\n    let title = createDiv('title', 'Flamboyant Engine');\r\n\r\n    function makeButton(text, onclick) {\r\n        let button = document.createElement('button');\r\n        button.textContent = text;\r\n        button.onclick = onclick;\r\n        return button;\r\n    }\r\n\r\n    function createDebugBtns(screen, i) {\r\n        // console.log(screen.uid, screen.parent);\r\n        let btn = makeButton((screen.parent ? screen.parent.uid + '>' : '') + screen.uid, function () {\r\n            view.goto(this.dataset.uid);\r\n        });\r\n        btn.setAttribute('data-uid', screen.uid);\r\n        pages.appendChild(btn);\r\n    }\r\n\r\n    function readAllScreens(screen) {\r\n        screen.pages.forEach((screen, i) => {\r\n            if (screen.isCollection()) {\r\n                readAllScreens(screen);\r\n            } else {\r\n                createDebugBtns(screen, i);\r\n            }\r\n        });\r\n    }\r\n\r\n    readAllScreens(view.screen);\r\n\r\n    function clearStorage() {\r\n        localStorage.clear();\r\n        location.reload();\r\n    }\r\n\r\n    controls.appendChild(makeButton('LIMPAR DADOS', clearStorage));\r\n    controls.appendChild(makeButton('AVANÇAR', () => view.next()));\r\n    controls.appendChild(makeButton('VOLTAR', () => view.prev()));\r\n\r\n    debug.appendChild(createDiv('title', 'DEBUG'));\r\n    debug.appendChild(document.createElement('hr'));\r\n    debug.appendChild(telaatual);\r\n    debug.appendChild(document.createElement('hr'));\r\n    debug.appendChild(pages);\r\n    debug.appendChild(document.createElement('hr'));\r\n    debug.appendChild(controls);\r\n    debug.appendChild(document.createElement('hr'));\r\n    debug.appendChild(title);\r\n    debug.appendChild(openclose);\r\n\r\n    openclose.onclick = function () {\r\n        debug.classList.toggle('open');\r\n    };\r\n\r\n    $(window).on(VIEW_EVENT.LOAD_END, function (data) {\r\n        // console.log(data.screen);\r\n        try {\r\n            $('.telaatual').html('Tela: ' + data.screen.model.uid);\r\n        } catch (e) {\r\n\r\n        }\r\n    });\r\n\r\n    let main = document.querySelector('body');\r\n    main.insertBefore(debug, main.childNodes[0]);\r\n    window.debugOn = true;\r\n}","/* Polyfill indexOf. */\r\nvar indexOf;\r\n\r\nif (typeof Array.prototype.indexOf === 'function') {\r\n    indexOf = function (haystack, needle) {\r\n        return haystack.indexOf(needle);\r\n    };\r\n} else {\r\n    indexOf = function (haystack, needle) {\r\n        var i = 0, length = haystack.length, idx = -1, found = false;\r\n\r\n        while (i < length && !found) {\r\n            if (haystack[i] === needle) {\r\n                idx = i;\r\n                found = true;\r\n            }\r\n\r\n            i++;\r\n        }\r\n\r\n        return idx;\r\n    };\r\n};\r\n\r\n\r\n/* Polyfill EventEmitter. */\r\nvar EventEmitter = function () {\r\n    this.events = {};\r\n};\r\n\r\nEventEmitter.prototype.on = function (event, listener) {\r\n    if (typeof this.events[event] !== 'object') {\r\n        this.events[event] = [];\r\n    }\r\n\r\n    this.events[event].push(listener);\r\n};\r\n\r\nEventEmitter.prototype.removeListener = function (event, listener) {\r\n    var idx;\r\n\r\n    if (typeof this.events[event] === 'object') {\r\n        idx = indexOf(this.events[event], listener);\r\n\r\n        if (idx > -1) {\r\n            this.events[event].splice(idx, 1);\r\n        }\r\n    }\r\n};\r\n\r\nEventEmitter.prototype.emit = function (event) {\r\n    var i, listeners, length, args = [].slice.call(arguments, 1);\r\n\r\n    if (typeof this.events[event] === 'object') {\r\n        listeners = this.events[event].slice();\r\n        length = listeners.length;\r\n\r\n        for (i = 0; i < length; i++) {\r\n            listeners[i].apply(this, args);\r\n        }\r\n    }\r\n};\r\n\r\nEventEmitter.prototype.once = function (event, listener) {\r\n    this.on(event, function g () {\r\n        this.removeListener(event, g);\r\n        listener.apply(this, arguments);\r\n    });\r\n};\r\n","class FixSize {\r\n\r\n    constructor(_window, _document) {\r\n        this.window = _window;\r\n        this.document = _document\r\n    }\r\n        \r\n    \r\n    init(){\r\n\r\n        if(this.hasBug()) {\r\n            this.fixSections(true);\r\n            var buttons_elements = this.document.getElementsByTagName(\"button\");\r\n           \r\n            for(var l=0; l<buttons_elements.length;l++){\r\n                \r\n                buttons_elements[l].addEventListener(\"click\", function () {\r\n                    setTimeout(() => { \r\n                        this.fixSections(false);\r\n                     }, 200);\r\n                });\r\n            }\r\n        }\r\n    }\r\n    \r\n    hasBug () {\r\n        var outer = this.document.createElement('div');\r\n        var inner = this.document.createElement('div');\r\n        outer.setAttribute('style', 'display:-ms-flexbox; display:flex; min-height:100vh;');\r\n        outer.appendChild(inner);\r\n        (this.document.body || this.document.documentElement).appendChild(outer);\r\n\r\n        var bug = !inner.offsetHeight;\r\n        outer.parentNode.removeChild(outer);\r\n    \r\n        return bug;\r\n    }\r\n\r\n    fixElementHeight (el) {\r\n        el.style.height = 'auto'; \r\n    \r\n        var height = el.offsetHeight; \r\n        el.style.height = height + 'px'; \r\n    }\r\n\r\n    fixSections(_listenner){\r\n\r\n        var section_elements = this.document.getElementsByTagName(\"section\");\r\n\r\n        for(var l=0; l<section_elements.length;l++){\r\n            var el = section_elements[l];\r\n            \r\n            this.fixElementHeight(el);\r\n    \r\n            if(_listenner){\r\n                this.window.addEventListener('resize', function () {\r\n                    this.fixElementHeight(el);\r\n                });\r\n            }\r\n           \r\n        }\r\n        \r\n    }\r\n    \r\n}\r\n","class ReturnModal {\r\n\r\n    constructor(_window, _document, _config, _onfinished) {\r\n        this.window = _window;\r\n        this.config = _config;\r\n        this.document = _document;\r\n        this.onfinished = _onfinished;\r\n    \r\n        var susppend_data = this.window.scorm.get('cmi.suspend_data');\r\n        var lesson_location = this.window.scorm.get('cmi.core.lesson_location');\r\n\r\n        if(susppend_data != null && susppend_data != \"\" && susppend_data != undefined && susppend_data != \"{}\" || lesson_location != null && lesson_location != \"\" && lesson_location != undefined){\r\n            this.addModal();\r\n        }\r\n        else{\r\n            this.onfinished();\r\n        }\r\n    }\r\n    \r\n    addModal() {\r\n        var objConfig = this.config.modalVoltar;\r\n        $(this.document.body).append(\r\n            `<div class=\"returnModal\"> \r\n                <div class=\"confirmBox\"> \r\n                <svg tabindex=\"-1\" class=\"svg-icon\" style=\"color:${objConfig.color} ;padding-bottom: 0.9rem; width: 5rem; height: 5rem;vertical-align: middle;fill: currentColor;overflow: hidden;\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M512 298.666667a42.666667 42.666667 0 0 0-42.666667 42.666666v170.666667a42.666667 42.666667 0 0 0 85.333334 0V341.333333a42.666667 42.666667 0 0 0-42.666667-42.666666z m39.253333 367.786666a32.426667 32.426667 0 0 0-3.84-7.68l-5.12-6.4a42.666667 42.666667 0 0 0-46.506666-8.96 49.066667 49.066667 0 0 0-14.08 8.96A42.666667 42.666667 0 0 0 469.333333 682.666667a42.666667 42.666667 0 0 0 3.413334 16.213333 38.4 38.4 0 0 0 23.04 23.04 40.106667 40.106667 0 0 0 32.426666 0 38.4 38.4 0 0 0 23.04-23.04A42.666667 42.666667 0 0 0 554.666667 682.666667a58.026667 58.026667 0 0 0 0-8.533334 27.306667 27.306667 0 0 0-3.413334-7.68zM512 85.333333a426.666667 426.666667 0 1 0 426.666667 426.666667A426.666667 426.666667 0 0 0 512 85.333333z m0 768a341.333333 341.333333 0 1 1 341.333333-341.333333 341.333333 341.333333 0 0 1-341.333333 341.333333z\"  /></svg>\r\n                <h1 tabindex=\"1\"> ${objConfig.msg} </h1>\r\n                <div class=\"buttons\"> \r\n                        <button tabindex=\"2\" aria-label=\"${objConfig.yes}\" id=\"confirm_rt\">${objConfig.yes}</button>\r\n                        <button tabindex=\"3\" aria-label=\"${objConfig.no}\" id=\"noconfirm_rt\">${objConfig.no}</button> \r\n                </div>\r\n                </div>\r\n            </div>`\r\n        );\r\n\r\n        var _this = this;\r\n\r\n        $(this.document.body).find(\".returnModal\").find(\"#confirm_rt\").click(function() {\r\n            $(_this.document.body).find(\".returnModal\").fadeOut();\r\n            _this.onfinished();\r\n        });\r\n\r\n        $(this.document.body).find(\".returnModal\").find(\"#noconfirm_rt\").click(function() {\r\n            localStorage.clear();\r\n            _this.window.scorm.set('cmi.suspend_data', \"{}\");\r\n            _this.window.scorm.set('cmi.core.lesson_location', \"\");\r\n            _this.onfinished();\r\n            // _this.window.navigate.goto(_this.config.pages[0].uid);\r\n            $(_this.document.body).find(\".returnModal\").fadeOut();\r\n            \r\n        });\r\n\r\n        $(this.document.body).find(\".returnModal\").find(\"button\").css(\"background-color\", objConfig.color);\r\n        \r\n        \r\n    };\r\n  \r\n\r\n}","var pathfix = function pathfix(path) {\r\n    return path.split(/[\\\\\\/]+/).join('/');\r\n};\r\n\r\nconst path = (pagepath) => pathfix('app/pages/' + pagepath);\r\n\r\nfunction shuffle(array) {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n        let j = Math.floor(Math.random() * (i + 1));\r\n        [array[i], array[j]] = [array[j], array[i]];\r\n    }\r\n    return array;\r\n}\r\n\r\nfunction mapModel(shuffledIMap, models) {\r\n    var arrtemp = [];\r\n    for (var i = 0; i < models.length; i++) {\r\n        arrtemp.push(models[shuffledIMap[i]]);\r\n    }\r\n    return arrtemp;\r\n}","/* =====================================================================================\r\n\r\nSCORM wrapper v1.1.7 by Philip Hutchison, May 2008 (http://pipwerks.com).\r\n\r\nCopyright (c) 2008 Philip Hutchison\r\nMIT-style license. Full license text can be found at\r\nhttp://www.opensource.org/licenses/mit-license.php\r\n\r\nThis wrapper is designed to work with both SCORM 1.2 and SCORM 2004.\r\n\r\nBased on APIWrapper.js, created by the ADL and Concurrent Technologies\r\nCorporation, distributed by the ADL (http://www.adlnet.gov/scorm).\r\n\r\nSCORM.API.find() and SCORM.API.get() functions based on ADL code,\r\nmodified by Mike Rustici (http://www.scorm.com/resources/apifinder/SCORMAPIFinder.htm),\r\nfurther modified by Philip Hutchison\r\n\r\n======================================================================================== */\r\nvar g_dtmInitialized = new Date(); // será ajustado após a inicialização\r\nvar pipwerks = {}; //pipwerks 'namespace' helps ensure no conflicts with possible other \"SCORM\" variables\r\npipwerks.UTILS = {}; //For holding UTILS functions\r\npipwerks.debug = {\r\n    //isActive: true\r\n}; //Enable (true) or disable (false) for debug mode\r\n\r\npipwerks.SCORM = { //Define the SCORM object\r\n    version: null, //Store SCORM version.\r\n    handleCompletionStatus: true, //Whether or not the wrapper should automatically handle the initial completion status\r\n    handleExitMode: true, //Whether or not the wrapper should automatically handle the exit mode\r\n    API: {\r\n        handle: null,\r\n        isFound: false\r\n    }, //Create API child object\r\n    connection: {\r\n        isActive: false\r\n    }, //Create connection child object\r\n    data: {\r\n        completionStatus: null,\r\n        exitStatus: null\r\n    }, //Create data child object\r\n    debug: {} //Create debug child object\r\n};\r\n\r\n\r\n\r\n/* --------------------------------------------------------------------------------\r\n   pipwerks.SCORM.isAvailable\r\n   A simple function to allow Flash ExternalInterface to confirm\r\n   presence of JS wrapper before attempting any LMS communication.\r\n\r\n   Parameters: none\r\n   Returns:    Boolean (true)\r\n----------------------------------------------------------------------------------- */\r\n\r\npipwerks.SCORM.isAvailable = function () {\r\n    return true;\r\n};\r\n\r\n\r\n\r\n// ------------------------------------------------------------------------- //\r\n// --- SCORM.API functions ------------------------------------------------- //\r\n// ------------------------------------------------------------------------- //\r\n\r\n\r\n/* -------------------------------------------------------------------------\r\n   pipwerks.SCORM.API.find(window)\r\n   Looks for an object named API in parent and opener windows\r\n\r\n   Parameters: window (the browser window object).\r\n   Returns:    Object if API is found, null if no API found\r\n---------------------------------------------------------------------------- */\r\npipwerks.SCORM.API.find = function (win) {\r\n\r\n    var API = null,\r\n        findAttempts = 0,\r\n        findAttemptLimit = 500,\r\n        traceMsgPrefix = \"SCORM.API.find\",\r\n        trace = pipwerks.UTILS.trace,\r\n        scorm = pipwerks.SCORM;\r\n\r\n    var g_nFindAPITries = 0;\r\n    scorm.version = \"1.2\";\r\n\r\n    \r\n\r\n    try {\r\n\r\n        while ((win.API == null) && (win.parent != null) && (win.parent != win)) {\r\n            g_nFindAPITries++;\r\n            if (g_nFindAPITries > 500) {\r\n                AlertUserOfAPIError(g_strAPITooDeep);\r\n                return null;\r\n            }\r\n            win = win.parent;\r\n        }\r\n\r\n        //        while ((!win.API && !win.API_1484_11) &&\r\n        //            (win.parent) &&\r\n        //            (win.parent != win) &&\r\n        //            (findAttempts <= findAttemptLimit)) {\r\n        //\r\n        //            findAttempts++;\r\n        //            win = win.parent;\r\n        //\r\n        //        }\r\n    } catch (err) {}\r\n\r\n\r\n    if (scorm.version) { //If SCORM version is specified by user, look for specific API\r\n\r\n        switch (scorm.version) {\r\n\r\n        case \"2004\":\r\n\r\n            if (win.API_1484_11) {\r\n\r\n                API = win.API_1484_11;\r\n\r\n            } else {\r\n\r\n                trace(traceMsgPrefix + \": SCORM version 2004 was specified by user, but API_1484_11 cannot be found.\");\r\n\r\n            }\r\n\r\n            break;\r\n\r\n        case \"1.2\":\r\n\r\n            try {\r\n                if (win.API) {\r\n\r\n                    API = win.API;\r\n\r\n                } else {\r\n\r\n                    trace(traceMsgPrefix + \": SCORM version 1.2 was specified by user, but API cannot be found.\");\r\n\r\n                }\r\n            } catch (err) {}\r\n\r\n            break;\r\n\r\n        }\r\n\r\n    } else { //If SCORM version not specified by user, look for APIs\r\n\r\n        if (win.API_1484_11) { //SCORM 2004-specific API.\r\n\r\n            scorm.version = \"2004\"; //Set version\r\n            API = win.API_1484_11;\r\n\r\n        } else if (win.API) { //SCORM 1.2-specific API\r\n\r\n            scorm.version = \"1.2\"; //Set version\r\n            API = win.API;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    if (API) {\r\n\r\n        trace(traceMsgPrefix + \": API found. Version: \" + scorm.version);\r\n        trace(\"API: \" + API);\r\n\r\n    } else {\r\n\r\n        trace(traceMsgPrefix + \": Error finding API. \\nFind attempts: \" + findAttempts + \". \\nFind attempt limit: \" + findAttemptLimit);\r\n\r\n    }\r\n\r\n    return API;\r\n\r\n};\r\n\r\n\r\n/* -------------------------------------------------------------------------\r\n   pipwerks.SCORM.API.get()\r\n   Looks for an object named API, first in the current window's frame\r\n   hierarchy and then, if necessary, in the current window's opener window\r\n   hierarchy (if there is an opener window).\r\n\r\n   Parameters:  None.\r\n   Returns:     Object if API found, null if no API found\r\n---------------------------------------------------------------------------- */\r\n\r\npipwerks.SCORM.API.get = function () {\r\n\r\n    var API = null,\r\n        win = window,\r\n        find = pipwerks.SCORM.API.find,\r\n        trace = pipwerks.UTILS.trace;\r\n\r\n    if (win.parent && win.parent != win) {\r\n\r\n        API = find(win.parent);\r\n\r\n    }\r\n\r\n    if (!API && win.top.opener) {\r\n\r\n        API = find(win.top.opener);\r\n\r\n    }\r\n\r\n    if (API) {\r\n\r\n        pipwerks.SCORM.API.isFound = true;\r\n\r\n    } else {\r\n\r\n        trace(\"API.get failed: Can't find the API!\");\r\n\r\n    }\r\n\r\n    return API;\r\n\r\n};\r\n\r\n\r\n/* -------------------------------------------------------------------------\r\n   pipwerks.SCORM.API.getHandle()\r\n   Returns the handle to API object if it was previously set\r\n\r\n   Parameters:  None.\r\n   Returns:     Object (the pipwerks.SCORM.API.handle variable).\r\n---------------------------------------------------------------------------- */\r\n\r\npipwerks.SCORM.API.getHandle = function () {\r\n\r\n    var API = pipwerks.SCORM.API;\r\n\r\n    if (!API.handle && !API.isFound) {\r\n\r\n        API.handle = API.get();\r\n\r\n    }\r\n\r\n    return API.handle;\r\n\r\n};\r\n\r\n\r\n\r\n// ------------------------------------------------------------------------- //\r\n// --- pipwerks.SCORM.connection functions --------------------------------- //\r\n// ------------------------------------------------------------------------- //\r\n/*//----------------------------------------------------------------------------\r\n   pipwerks.SCORM.connection.initialize()\r\n  // Tells the LMS to initiate the communication session.\r\n\r\n   Parameters:  None\r\n   Returns:     Boolean\r\n//---------------------------------------------------------------------------- */\r\n\r\npipwerks.SCORM.connection.initialize = function () {\r\n\r\n    var success = false,\r\n        scorm = pipwerks.SCORM,\r\n        completionStatus = pipwerks.SCORM.data.completionStatus,\r\n        trace = pipwerks.UTILS.trace,\r\n        makeBoolean = pipwerks.UTILS.StringToBoolean,\r\n        debug = pipwerks.SCORM.debug,\r\n        traceMsgPrefix = \"SCORM.connection.initialize \",\r\n        lmsConfig = window.config.lms;\r\n\r\n    \r\n    scorm.version = \"1.2\";\r\n    scorm.startTimer();\r\n    trace(\"connection.initialize called.\");\r\n\r\n\r\n    console.log(\"LMS: \" + lmsConfig.name);\r\n\r\n    if (!scorm.connection.isActive) {\r\n\r\n        var API = scorm.API.getHandle(),\r\n            errorCode = 0;\r\n\r\n        if (API) {\r\n\r\n            switch (scorm.version) {\r\n            case \"1.2\":\r\n                \r\n                success = makeBoolean(API.LMSInitialize(\"\").toString());\r\n                break;\r\n            case \"2004\":\r\n                success = makeBoolean(API.Initialize(\"\").toString());\r\n                break;\r\n            }\r\n\r\n            if (success) {\r\n\r\n                //Double-check that connection is active and working before returning 'true' boolean\r\n                errorCode = debug.getCode();\r\n\r\n                if (errorCode !== null && errorCode === 0) {\r\n\r\n                    scorm.connection.isActive = true;\r\n                    \r\n\r\n                    if (scorm.handleCompletionStatus) {\r\n\r\n                        //Automatically set new launches to incomplete\r\n                        completionStatus = pipwerks.SCORM.status(\"get\");\r\n\r\n                        if (completionStatus) {\r\n\r\n\r\n                            switch (completionStatus) {\r\n\r\n                                //Both SCORM 1.2 and 2004\r\n                            case \"not attempted\":\r\n                                pipwerks.SCORM.status(\"set\", \"incomplete\");\r\n                                break;\r\n\r\n                                //SCORM 2004 only\r\n                            case \"unknown\":\r\n                                pipwerks.SCORM.status(\"set\", \"incomplete\");\r\n                                break;\r\n\r\n                                //Additional options, presented here in case you'd like to use them\r\n                                //case \"completed\"  : break;\r\n                                //case \"incomplete\" : break;\r\n                                //case \"passed\"     : break;\t//SCORM 1.2 only\r\n                                //case \"failed\"     : break;\t//SCORM 1.2 only\r\n                                //case \"browsed\"    : break;\t//SCORM 1.2 only\r\n\r\n                            }\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                } else {\r\n\r\n                    success = false;\r\n                    trace(traceMsgPrefix + \"failed. \\nError code: \" + errorCode + \" \\nError info: \" + debug.getInfo(errorCode));\r\n\r\n                }\r\n\r\n            } else {\r\n\r\n                errorCode = debug.getCode();\r\n\r\n                if (errorCode !== null && errorCode !== 0) {\r\n\r\n                    trace(traceMsgPrefix + \"failed. \\nError code: \" + errorCode + \" \\nError info: \" + debug.getInfo(errorCode));\r\n\r\n                } else {\r\n\r\n                    trace(traceMsgPrefix + \"failed: No response from server.\");\r\n\r\n                }\r\n            }\r\n\r\n        } else {\r\n\r\n            trace(traceMsgPrefix + \"failed: API is null.\");\r\n\r\n        }\r\n\r\n    } else {\r\n\r\n        trace(traceMsgPrefix + \"aborted: Connection already active.\");\r\n\r\n    }\r\n\r\n    return success;\r\n\r\n};\r\n\r\n\r\n/* -------------------------------------------------------------------------\r\n   pipwerks.SCORM.connection.terminate()\r\n   Tells the LMS to terminate the communication session\r\n\r\n   Parameters:  None\r\n   Returns:     Boolean\r\n---------------------------------------------------------------------------- */\r\n\r\npipwerks.SCORM.connection.terminate = function () {\r\n\r\n    var success = false,\r\n        scorm = pipwerks.SCORM,\r\n        exitStatus = pipwerks.SCORM.data.exitStatus,\r\n        completionStatus = pipwerks.SCORM.data.completionStatus,\r\n        trace = pipwerks.UTILS.trace,\r\n        makeBoolean = pipwerks.UTILS.StringToBoolean,\r\n        debug = pipwerks.SCORM.debug,\r\n        traceMsgPrefix = \"SCORM.connection.terminate \";\r\n\r\n        scorm.version = \"1.2\";\r\n        scorm.setTimer();\r\n        scorm.save();\r\n        \r\n\r\n\r\n    if (scorm.connection.isActive) {\r\n\r\n        var API = scorm.API.getHandle(),\r\n            errorCode = 0;\r\n\r\n\r\n        if (API) {\r\n            \r\n            //ESTA LÓGICA PODE DAR PROBLEMA EM ALGUNS LMSs\r\n            if (scorm.handleExitMode && !exitStatus) {\r\n\r\n                if (completionStatus !== \"completed\" && completionStatus !== \"passed\") {\r\n\r\n                    switch (scorm.version) {\r\n                    case \"1.2\":\r\n\r\n                        var lmsConfig = window.config.lms;\r\n\r\n                        if(lmsConfig){\r\n\r\n                            if(lmsConfig.name == \"default\"){\r\n                                success = scorm.set(\"cmi.core.exit\", \"logout\");\r\n                            }else if(lmsConfig.name == \"plateau\"){\r\n                                success = scorm.set(\"cmi.core.exit\", \"suspend\");\r\n                            }\r\n                        }else{\r\n                            success = scorm.set(\"cmi.core.exit\", \"logout\");\r\n                        }\r\n                      \r\n                        \r\n                        break;\r\n                    case \"2004\":\r\n                        // success = scorm.set(\"cmi.exit\", \"suspend\");\r\n                        break;\r\n                    }\r\n\r\n                } else {\r\n\r\n                    switch (scorm.version) {\r\n                    case \"1.2\":\r\n                        success = scorm.set(\"cmi.core.exit\", \"logout\");\r\n                        break;\r\n                    case \"2004\":\r\n                        // success = scorm.set(\"cmi.exit\", \"normal\");\r\n                        break;\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n            \r\n\r\n            switch (scorm.version) {\r\n            case \"1.2\":   \r\n                success = makeBoolean(API.LMSFinish(\"\").toString());\r\n                break;\r\n            case \"2004\":\r\n                success = makeBoolean(API.Terminate(\"\").toString());\r\n                break;\r\n            }\r\n\r\n            if (success) {\r\n\r\n                scorm.connection.isActive = false;\r\n\r\n            } else {\r\n\r\n                errorCode = debug.getCode();\r\n                trace(traceMsgPrefix + \"failed. \\nError code: \" + errorCode + \" \\nError info: \" + debug.getInfo(errorCode));\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            trace(traceMsgPrefix + \"failed: API is null.\");\r\n\r\n        }\r\n\r\n    } else {\r\n\r\n        trace(traceMsgPrefix + \"aborted: Connection already terminated.\");\r\n\r\n    }\r\n\r\n    \r\n\r\n    return success;\r\n\r\n};\r\n\r\n\r\n\r\n// ------------------------------------------------------------------------- //\r\n// --- pipwerks.SCORM.data functions --------------------------------------- //\r\n// ------------------------------------------------------------------------- //\r\n\r\n\r\n/* -------------------------------------------------------------------------\r\n   pipwerks.SCORM.data.get(parameter)\r\n   Requests information from the LMS.\r\n\r\n   Parameter: parameter (string, name of the SCORM data model element)\r\n   Returns:   string (the value of the specified data model element)\r\n---------------------------------------------------------------------------- */\r\n\r\npipwerks.SCORM.data.get = function (parameter) {\r\n\r\n    \r\n    var value = null,\r\n        scorm = pipwerks.SCORM,\r\n        trace = pipwerks.UTILS.trace,\r\n        debug = pipwerks.SCORM.debug,\r\n        traceMsgPrefix = \"SCORM.data.get(\" + parameter + \") \";\r\n\r\n    \r\n    scorm.version = \"1.2\";\r\n\r\n    if (scorm.connection.isActive) {\r\n\r\n        var API = scorm.API.getHandle(),\r\n            errorCode = 0;\r\n\r\n        if (API) {\r\n\r\n            switch (scorm.version) {\r\n            case \"1.2\":\r\n                value = API.LMSGetValue(parameter);\r\n                break;\r\n            case \"2004\":\r\n                value = API.GetValue(parameter);\r\n                break;\r\n            }\r\n\r\n            errorCode = debug.getCode();\r\n\r\n            //GetValue returns an empty string on errors\r\n            //Double-check errorCode to make sure empty string\r\n            //is really an error and not field value\r\n            if (value !== \"\" && errorCode === 0) {\r\n\r\n                switch (parameter) {\r\n\r\n                case \"cmi.core.lesson_status\":\r\n                case \"cmi.completion_status\":\r\n                    scorm.data.completionStatus = value;\r\n                    break;\r\n\r\n                case \"cmi.core.exit\":\r\n                case \"cmi.exit\":\r\n                    scorm.data.exitStatus = value;\r\n                    break;\r\n\r\n                }\r\n\r\n            } else {\r\n\r\n                trace(traceMsgPrefix + \"failed. \\nError code: \" + errorCode + \"\\nError info: \" + debug.getInfo(errorCode));\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            trace(traceMsgPrefix + \"failed: API is null.\");\r\n\r\n        }\r\n\r\n    } else {\r\n\r\n        trace(traceMsgPrefix + \"failed: API connection is inactive.\");\r\n\r\n    }\r\n\r\n    trace(traceMsgPrefix + \" value: \" + value);\r\n\r\n    return String(value);\r\n\r\n};\r\n\r\n\r\n/* -------------------------------------------------------------------------\r\n   pipwerks.SCORM.data.set()\r\n   Tells the LMS to assign the value to the named data model element.\r\n   Also stores the SCO's completion status in a variable named\r\n   pipwerks.SCORM.data.completionStatus. This variable is checked whenever\r\n   pipwerks.SCORM.connection.terminate() is invoked.\r\n\r\n   Parameters: parameter (string). The data model element\r\n               value (string). The value for the data model element\r\n   Returns:    Boolean\r\n---------------------------------------------------------------------------- */\r\n\r\npipwerks.SCORM.data.set = function (parameter, value) {\r\n\r\n    \r\n    var success = false,\r\n        scorm = pipwerks.SCORM,\r\n        trace = pipwerks.UTILS.trace,\r\n        makeBoolean = pipwerks.UTILS.StringToBoolean,\r\n        debug = pipwerks.SCORM.debug,\r\n        traceMsgPrefix = \"SCORM.data.set(\" + parameter + \") \";\r\n\r\n\r\n    if (scorm.connection.isActive) {\r\n\r\n        var API = scorm.API.getHandle(),\r\n            errorCode = 0;\r\n\r\n        if (API) {\r\n\r\n            switch (scorm.version) {\r\n            case \"1.2\":\r\n                success = makeBoolean(API.LMSSetValue(parameter, value).toString());\r\n                break;\r\n            case \"2004\":\r\n                success = makeBoolean(API.SetValue(parameter, value).toString());\r\n                break;\r\n            }\r\n\r\n            if (success) {\r\n\r\n                if (parameter === \"cmi.core.lesson_status\" || parameter === \"cmi.completion_status\") {\r\n\r\n                    scorm.data.completionStatus = value;\r\n\r\n                }\r\n\r\n            } else {\r\n\r\n                trace(traceMsgPrefix + \"failed. \\nError code: \" + errorCode + \". \\nError info: \" + debug.getInfo(errorCode));\r\n\r\n            }\r\n\r\n            // ISTO AQUI FOI COMENTADO PARA FUNCIONAR NO FLOW\r\n\r\n            //pipwerks.SCORM.save();\r\n\r\n        } else {\r\n\r\n            trace(traceMsgPrefix + \"failed: API is null.\");\r\n\r\n        }\r\n\r\n    } else {\r\n\r\n        trace(traceMsgPrefix + \"failed: API connection is inactive.\");\r\n\r\n    }\r\n\r\n    return success;\r\n\r\n};\r\n\r\n/* -------------------------------------------------------------------------\r\n   pipwerks.SCORM.data.save()\r\n   Add method to save course time.\r\n\r\n   Parameters: None\r\n   Returns:    Boolean\r\n---------------------------------------------------------------------------- */\r\n\r\npipwerks.SCORM.data.startTimer = function (parameter, value) {\r\n    g_dtmInitialized = new Date();\r\n}\r\n\r\npipwerks.SCORM.data.setTimer = function (parameter, value) {\r\n    var dtm = new Date();\r\n    var n = dtm.getTime() - g_dtmInitialized.getTime();\r\n    var totalDuration = pipwerks.UTILS.MillisecondsToCMIDuration(n);\r\n\r\n    pipwerks.SCORM.set(\"cmi.core.session_time\",totalDuration);\r\n    \r\n}\r\n\r\n\r\n\r\n\r\n\r\n/* -------------------------------------------------------------------------\r\n   pipwerks.SCORM.data.save()\r\n   Instructs the LMS to persist all data to this point in the session\r\n\r\n   Parameters: None\r\n   Returns:    Boolean\r\n---------------------------------------------------------------------------- */\r\n\r\npipwerks.SCORM.data.save = function () {\r\n\r\n    var success = false,\r\n        scorm = pipwerks.SCORM,\r\n        trace = pipwerks.UTILS.trace,\r\n        makeBoolean = pipwerks.UTILS.StringToBoolean,\r\n        traceMsgPrefix = \"SCORM.data.save failed\";\r\n\r\n    scorm.version = \"1.2\";\r\n    \r\n    if (scorm.connection.isActive) {\r\n\r\n        var API = scorm.API.getHandle();\r\n\r\n        if (API) {\r\n\r\n            switch (scorm.version) {\r\n            case \"1.2\":\r\n                success = makeBoolean(API.LMSCommit(\"\").toString());\r\n                break;\r\n            case \"2004\":\r\n                success = makeBoolean(API.Commit(\"\").toString());\r\n                break;\r\n            }\r\n\r\n        } else {\r\n\r\n            trace(traceMsgPrefix + \": API is null.\");\r\n\r\n        }\r\n\r\n    } else {\r\n\r\n        trace(traceMsgPrefix + \": API connection is inactive.\");\r\n\r\n    }\r\n\r\n    return success;\r\n\r\n};\r\n\r\n\r\npipwerks.SCORM.status = function (action, status) {\r\n\r\n    var success = false,\r\n        scorm = pipwerks.SCORM,\r\n        trace = pipwerks.UTILS.trace,\r\n        traceMsgPrefix = \"SCORM.getStatus failed\",\r\n        cmi = \"\";\r\n\r\n    if (action !== null) {\r\n\r\n        switch (scorm.version) {\r\n        case \"1.2\":\r\n            cmi = \"cmi.core.lesson_status\";\r\n            break;\r\n        case \"2004\":\r\n            cmi = \"cmi.completion_status\";\r\n            break;\r\n        }\r\n\r\n        switch (action) {\r\n\r\n        case \"get\":\r\n            success = pipwerks.SCORM.data.get(cmi);\r\n            break;\r\n\r\n        case \"set\":\r\n            if (status !== null) {\r\n\r\n                success = pipwerks.SCORM.data.set(cmi, status);\r\n\r\n            } else {\r\n\r\n                success = false;\r\n                trace(traceMsgPrefix + \": status was not specified.\");\r\n\r\n            }\r\n\r\n            break;\r\n\r\n        default:\r\n            success = false;\r\n            trace(traceMsgPrefix + \": no valid action was specified.\");\r\n\r\n        }\r\n\r\n    } else {\r\n\r\n        trace(traceMsgPrefix + \": action was not specified.\");\r\n\r\n    }\r\n\r\n    return success;\r\n\r\n};\r\n\r\n\r\n// ------------------------------------------------------------------------- //\r\n// --- pipwerks.SCORM.debug functions -------------------------------------- //\r\n// ------------------------------------------------------------------------- //\r\n\r\n\r\n/* -------------------------------------------------------------------------\r\n   pipwerks.SCORM.debug.getCode\r\n   Requests the error code for the current error state from the LMS\r\n\r\n   Parameters: None\r\n   Returns:    Integer (the last error code).\r\n---------------------------------------------------------------------------- */\r\n\r\npipwerks.SCORM.debug.getCode = function () {\r\n\r\n    var API = pipwerks.SCORM.API.getHandle(),\r\n        scorm = pipwerks.SCORM,\r\n        trace = pipwerks.UTILS.trace,\r\n        code = 0;\r\n\r\n    if (API) {\r\n\r\n        switch (scorm.version) {\r\n        case \"1.2\":\r\n            code = parseInt(API.LMSGetLastError(), 10);\r\n            break;\r\n        case \"2004\":\r\n            code = parseInt(API.GetLastError(), 10);\r\n            break;\r\n        }\r\n\r\n    } else {\r\n\r\n        trace(\"SCORM.debug.getCode failed: API is null.\");\r\n\r\n    }\r\n\r\n    return code;\r\n\r\n};\r\n\r\n\r\n/* -------------------------------------------------------------------------\r\n   pipwerks.SCORM.debug.getInfo()\r\n   \"Used by a SCO to request the textual description for the error code\r\n   specified by the value of [errorCode].\"\r\n\r\n   Parameters: errorCode (integer).\r\n   Returns:    String.\r\n----------------------------------------------------------------------------- */\r\n\r\npipwerks.SCORM.debug.getInfo = function (errorCode) {\r\n\r\n    var API = pipwerks.SCORM.API.getHandle(),\r\n        scorm = pipwerks.SCORM,\r\n        trace = pipwerks.UTILS.trace,\r\n        result = \"\";\r\n\r\n\r\n    if (API) {\r\n\r\n        switch (scorm.version) {\r\n        case \"1.2\":\r\n            result = API.LMSGetErrorString(errorCode.toString());\r\n            break;\r\n        case \"2004\":\r\n            result = API.GetErrorString(errorCode.toString());\r\n            break;\r\n        }\r\n\r\n    } else {\r\n\r\n        trace(\"SCORM.debug.getInfo failed: API is null.\");\r\n\r\n    }\r\n\r\n    return String(result);\r\n\r\n};\r\n\r\n\r\n/* -------------------------------------------------------------------------\r\n   pipwerks.SCORM.debug.getDiagnosticInfo\r\n   \"Exists for LMS specific use. It allows the LMS to define additional\r\n   diagnostic information through the API Instance.\"\r\n\r\n   Parameters: errorCode (integer).\r\n   Returns:    String (Additional diagnostic information about the given error code).\r\n---------------------------------------------------------------------------- */\r\n\r\npipwerks.SCORM.debug.getDiagnosticInfo = function (errorCode) {\r\n\r\n    var API = pipwerks.SCORM.API.getHandle(),\r\n        scorm = pipwerks.SCORM,\r\n        trace = pipwerks.UTILS.trace,\r\n        result = \"\";\r\n\r\n    if (API) {\r\n\r\n        switch (scorm.version) {\r\n        case \"1.2\":\r\n            result = API.LMSGetDiagnostic(errorCode);\r\n            break;\r\n        case \"2004\":\r\n            result = API.GetDiagnostic(errorCode);\r\n            break;\r\n        }\r\n\r\n    } else {\r\n\r\n        trace(\"SCORM.debug.getDiagnosticInfo failed: API is null.\");\r\n\r\n    }\r\n\r\n    return String(result);\r\n\r\n};\r\n\r\n\r\n// ------------------------------------------------------------------------- //\r\n// --- Shortcuts! ---------------------------------------------------------- //\r\n// ------------------------------------------------------------------------- //\r\n\r\n// Because nobody likes typing verbose code.\r\n\r\npipwerks.SCORM.init = pipwerks.SCORM.connection.initialize;\r\npipwerks.SCORM.get = pipwerks.SCORM.data.get;\r\npipwerks.SCORM.set = pipwerks.SCORM.data.set;\r\npipwerks.SCORM.save = pipwerks.SCORM.data.save;\r\npipwerks.SCORM.startTimer = pipwerks.SCORM.data.startTimer;\r\npipwerks.SCORM.setTimer = pipwerks.SCORM.data.setTimer;\r\npipwerks.SCORM.quit = pipwerks.SCORM.connection.terminate;\r\n\r\n\r\n\r\n// ------------------------------------------------------------------------- //\r\n// --- pipwerks.UTILS functions -------------------------------------------- //\r\n// ------------------------------------------------------------------------- //\r\n\r\n\r\n/* -------------------------------------------------------------------------\r\n   pipwerks.UTILS.StringToBoolean()\r\n   Converts 'boolean strings' into actual valid booleans.\r\n\r\n   (Most values returned from the API are the strings \"true\" and \"false\".)\r\n\r\n   Parameters: String\r\n   Returns:    Boolean\r\n---------------------------------------------------------------------------- */\r\n\r\npipwerks.UTILS.StringToBoolean = function (string) {\r\n    switch (string.toLowerCase()) {\r\n    case \"true\":\r\n    case \"yes\":\r\n    case \"1\":\r\n        return true;\r\n    case \"false\":\r\n    case \"no\":\r\n    case \"0\":\r\n    case null:\r\n        return false;\r\n    default:\r\n        return Boolean(string);\r\n    }\r\n};\r\n\r\n\r\n\r\n/* -------------------------------------------------------------------------\r\n   pipwerks.UTILS.trace()\r\n   Displays error messages when in debug mode.\r\n\r\n   Parameters: msg (string)\r\n   Return:     None\r\n---------------------------------------------------------------------------- */\r\n\r\npipwerks.UTILS.trace = function (msg) {\r\n\r\n    if (pipwerks.debug.isActive) {\r\n\r\n        //Firefox users can use the 'Firebug' extension's console.\r\n        if (window.console && window.console.firebug) {\r\n            console.log(msg);\r\n            window._console.log(msg);\r\n        } else {\r\n            //alert(msg);\r\n        }\r\n\r\n    }\r\n};\r\n\r\npipwerks.UTILS.MillisecondsToCMIDuration = function (n){\r\n    var hms = \"\";\r\n    var dtm = new Date();   dtm.setTime(n);\r\n    var h = \"000\" + Math.floor(n / 3600000);\r\n    var m = \"0\" + dtm.getMinutes();\r\n    var s = \"0\" + dtm.getSeconds();\r\n    var cs = \"0\" + Math.round(dtm.getMilliseconds() / 10);\r\n    hms = h.substr(h.length-4)+\":\"+m.substr(m.length-2)+\":\";\r\n    hms += s.substr(s.length-2)+\".\"+cs.substr(cs.length-2);\r\n    return hms\r\n}","class Screen {\r\n\r\n    constructor(model, persistance, parent) {\r\n\r\n        this.element = null;\r\n        this.model = model;\r\n        this.index = -1;\r\n        this.current = null;\r\n        this.persistance = persistance;\r\n        this.parent = parent || null;\r\n        this.behaviorsAdaptive = null;\r\n        this.waterMark = null;\r\n        this.returnModal = null;\r\n        this.fixSize = null;\r\n        \r\n        \r\n\r\n        this.level = this.isRoot() ? 0 : this.parent.level + 1;\r\n        this.uid = this.isRoot() ? \"ROOT\" : model.uid;\r\n\r\n        if (this.isCollection()) {\r\n            let models = model.pages.concat([]);\r\n\r\n            // if (this.hasBehaviors()) {\r\n                \r\n            //     if (this.needToShuffle()) {\r\n            //         models = this.shuffleThe(models);\r\n            //     }\r\n\r\n            //     if (this.needToPickASample()) {\r\n\r\n            //         if (this.model.behaviors.sample < models.length) {\r\n\r\n            //             models = this.pickTheSampleOf(this.model.behaviors.sample, models);\r\n            //         }\r\n\r\n\r\n            //     }\r\n            // }\r\n            this.pages = models.map(m => new Screen(m, persistance, this));\r\n            this.current = this.pages[0];\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    isRoot() {\r\n        return this.parent === null;\r\n    }\r\n\r\n    get shuffleKey() {\r\n        return \"s\";\r\n    }\r\n\r\n    get pagesModel(){\r\n        return this.model;\r\n    }\r\n\r\n    shuffleThe(models) {\r\n        let shuffledIMap = this.loadData(this.shuffleKey) || shuffle(this.makeIndexMap(models.length));\r\n        this.saveData(this.shuffleKey, shuffledIMap);\r\n        return mapModel(shuffledIMap, models);\r\n    }\r\n\r\n    makeIndexMap(length) {\r\n        var indexMap = [];\r\n        for (let index = 0; index < length; index++) {\r\n            indexMap.push(index);\r\n        }\r\n        return indexMap;\r\n    }\r\n\r\n\r\n    saveData(key, value) {\r\n        let data = this.persistance.loadObject(this.uid) || {};\r\n        data[key] = value;\r\n        this.persistance.saveObject(this.uid, data);\r\n    }\r\n\r\n    loadData(key) {\r\n        let data = this.persistance.loadObject(this.uid) || {};\r\n        return data[key];\r\n    }\r\n\r\n    pickTheSampleOf(sample, models) {\r\n        return models.splice(0, sample);\r\n    }\r\n\r\n    needToShuffle() {\r\n        let need = this.model.behaviors.hasOwnProperty(\"shuffle\");\r\n        return need;\r\n    }\r\n\r\n    needToPickASample() {\r\n        let need = this.model.behaviors.hasOwnProperty(\"sample\");\r\n        return need;\r\n    }\r\n\r\n    hasBehaviors() {\r\n        let has = this.model.hasOwnProperty(\"behaviors\");\r\n        return has;\r\n    }\r\n\r\n    render() {\r\n        if (this.element == null) {\r\n            this.element = document.createElement(\"iframe\");\r\n            this.element.id = this.model.uid;\r\n\r\n            if (this.element.src != path(this.model.src)) {\r\n                this.element.src = path(this.model.src);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    first() {\r\n        this.index = this.minLimit();\r\n        this.current = this.pages[this.minLimit()];\r\n        \r\n        return this.current;\r\n    }\r\n\r\n    last() {\r\n        this.index = this.maxLimit();\r\n        this.current = this.pages[this.maxLimit()];\r\n        return this.current;\r\n    }\r\n\r\n    selectPage(uid) {\r\n        if (this.isSimpleScreen()) return null;\r\n        var pageToReturn = null;\r\n        let index_found = this.getIndex(uid);\r\n        if (index_found > -1) {\r\n            pageToReturn = this.goto(index_found);\r\n            if (pageToReturn.isCollection()) {\r\n                pageToReturn = pageToReturn.selectPage(pageToReturn.getCurrentScreen().uid);\r\n            }\r\n        } else {\r\n            pageToReturn = this.pages.reduce((last, current, index) => {\r\n                if (last == null) {\r\n                    if (current.model.uid == uid) {\r\n                        return current;\r\n                    } else {\r\n                        this.goto(index);\r\n                        return current.selectPage(uid);\r\n                    }\r\n                }\r\n                return last;\r\n            }, null);\r\n        }\r\n        return this.pageToReturnCondition(pageToReturn);\r\n    }\r\n\r\n    pageToReturnCondition(pageToReturn) {\r\n        if (this.isRoot() && (pageToReturn == null || pageToReturn == undefined)) {\r\n            return this.first();\r\n        }\r\n        return pageToReturn;\r\n    }\r\n    \r\n    getIndex(uid) {\r\n        let index = -1;\r\n        if (this.isCollection() && typeof uid == 'string') {\r\n            index = this.pages.findIndex(p => p.model.uid == uid);\r\n        }\r\n        return index;\r\n    }\r\n\r\n    getCurrentScreen() {\r\n        if (this.isSimpleScreen()) return this;\r\n        return this.current.getCurrentScreen();\r\n    }\r\n\r\n    loadPageEvents(screen) {\r\n        screen.element.contentWindow.events = new EventEmitter();\r\n\r\n        screen.element.contentWindow.onready = function() {\r\n            screen.element.contentWindow.events.emit('ready');\r\n        }\r\n\r\n        screen.element.contentWindow.enterView = function(direction) {\r\n            screen.element.contentWindow.events.emit('enterView', {\r\n                direction: direction\r\n            });\r\n        }\r\n\r\n        screen.element.contentWindow.exitView = function(direction) {\r\n            screen.element.contentWindow.events.emit('exitView', {\r\n                direction: direction\r\n            });\r\n        }\r\n    }\r\n\r\n    walkFix(direction) {\r\n        if (direction < 0) {\r\n            this.index = this.maxLimit() + 1;\r\n        } else\r\n        if (direction > 0) {\r\n            this.index = this.minLimit() - 1;\r\n        }\r\n    }\r\n\r\n    walk(direction) {\r\n        let nextScreen = null;\r\n        if (this.current.isCollection()) {\r\n            nextScreen = this.current.walk(direction);\r\n        } else {\r\n            var nextIndex = this.index + direction;\r\n            let next = this.goto(nextIndex);\r\n            nextScreen = next;\r\n            if (this.indexIsOutLimits(nextIndex)) {\r\n                this.index = nextIndex;\r\n                this.indexClampLimit();\r\n                return null;\r\n            } else if (next.isCollection()) {\r\n                next.walkFix(direction);\r\n                nextScreen = next.walk(direction);\r\n            }\r\n        }\r\n        if (nextScreen == null) {\r\n            nextScreen = this.goto(this.index + direction);\r\n            if (nextScreen.isCollection()) {\r\n                nextScreen = nextScreen.last();\r\n            }\r\n        }\r\n        if (this.isRoot()) {\r\n            this.indexClampLimit();\r\n        }\r\n\r\n        \r\n\r\n        \r\n        return nextScreen;\r\n    }\r\n\r\n    indexIsOutLimits(index) {\r\n        return (index < this.minLimit() || index > this.maxLimit());\r\n    }\r\n\r\n    goto(index) {\r\n        this.index = index;\r\n        this.indexClampLimit();\r\n        this.current = this.pages[this.index];\r\n        return this.current;\r\n    }\r\n\r\n    next() {\r\n        return this.walk(1);\r\n    }\r\n\r\n    prev() {\r\n        return this.walk(-1);\r\n    }\r\n\r\n    minLimit() {\r\n        return 0;\r\n    }\r\n\r\n    maxLimit() {\r\n        return this.pages.length - 1;\r\n    }\r\n\r\n    indexClampLimit() {\r\n        if (this.index >= this.maxLimit())\r\n            this.index = this.maxLimit();\r\n        if (this.index <= this.minLimit())\r\n            this.index = this.minLimit();\r\n    }\r\n\r\n    isCollection() {\r\n        return this.model.hasOwnProperty('pages');\r\n    }\r\n\r\n    isSimpleScreen() {\r\n        return !this.isCollection();\r\n    }\r\n\r\n    inject(property, value) {\r\n        this.element.contentWindow[property] = value;\r\n        return this;\r\n    }\r\n\r\n    onready() {\r\n        \r\n        this.element.contentWindow.uid = this.model.uid;\r\n        \r\n        try {\r\n\r\n            this.element.contentWindow.onready();\r\n            var acessibilityConfig = this.element.contentWindow.engine_config.config.acessibility;\r\n          \r\n            if (this.element.contentWindow.engine_config.config.behaviors) {\r\n                if(this.element.contentWindow.engine_config.config.behaviors.adaptive){\r\n                    this.behaviorsAdaptive = new BehaviorAdaptative(this.element.contentWindow, this.element.contentWindow.document);\r\n                    this.behaviorsAdaptive.behaviorAdapt(this.element.contentWindow.engine_config.config);\r\n                }\r\n            }\r\n\r\n\r\n            //MARCA D'AGUA\r\n            if (this.element.contentWindow.engine_config.config.waterMark) {\r\n                //ADICIONANDO MARCA D'AGUA CASO ESTEJA ATIVA NO CONFIG\r\n                this.waterMark = new WaterMark(this.element.contentWindow, this.element.contentWindow.document);\r\n                this.waterMark.addWaterMark();\r\n            }\r\n\r\n            //CONTROLE DE FULL SCREEN NO CLIQUE DOS ELEMENTOS COM A CLASSE fullscreen_controll\r\n            var fullscreen_elements = this.element.contentWindow.document.getElementsByClassName(\"fullscreen_controll\");\r\n           \r\n\r\n            for(var k=0; k<fullscreen_elements.length;k++){\r\n                bridge.fullScreenControll(fullscreen_elements[k])\r\n            }\r\n\r\n\r\n            //ATIVANDO OU DESATIVANDO AS FERRAMENTAS DE ACESSIBILIDADE \r\n            if(acessibilityConfig){\r\n                this.acessibilityDisplayControll = new AcessibilityDisplayControll(this.element.contentWindow, this.element.contentWindow.document, acessibilityConfig);\r\n                this.acessibilityDisplayControll.init();\r\n            }\r\n\r\n            //AJUSTANDO O TAMANHO DAS SECTIONS EM ALGUNS NAVEGADORES\r\n            this.fixSize = new FixSize(this.element.contentWindow, this.element.contentWindow.document);\r\n            this.fixSize.init();\r\n            \r\n        } catch (e) {\r\n            console.warn('PAGE[' + this.model.uid + ']', 'não implementou o método onready()', e);\r\n        }\r\n    }\r\n\r\n    enterView(direction) {\r\n        try {\r\n            this.element.contentWindow.enterView(direction);\r\n        } catch (e) {\r\n            console.warn('PAGE[' + this.model.uid + ']', 'não implementou o metodo enterView()', e);\r\n        }\r\n    }\r\n\r\n    exitView(direction) {\r\n        //COMITANDO OS DADOS PARA O SCORM NO FINAL DE CADA PÁGINA.\r\n        scorm.save();\r\n\r\n        try {\r\n            if(this.element.contentWindow!=null){\r\n                this.element.contentWindow.exitView(direction);\r\n            }\r\n            \r\n        } catch (e) {\r\n            console.warn('PAGE[' + this.model.uid + ']', 'não implementou o metodo exitView()', e);\r\n        }\r\n    }\r\n}","window.VIEW_EVENT = {\r\n    READY: \"viewReady\",\r\n    LOAD_START: \"viewLoadStart\",\r\n    LOAD_END: \"viewLoadEnd\",\r\n};\r\n\r\nconst LOADED_SCREEN_LIMIT = 0;\r\nvar _SCREEN_IS_LOADING = false;\r\nvar waitForEl = function(selector, callback) {\r\n    if (selector != null) {\r\n      callback();\r\n    } else {\r\n      setTimeout(function() {\r\n        waitForEl(selector, callback);\r\n      }, 100);\r\n    }\r\n}; \r\n\r\n\r\nclass ViewController extends Base {\r\n    \r\n    constructor(element, model, persistance) {\r\n        super(element);\r\n        this.persistance = persistance;\r\n        this.model = model;\r\n        this.current_uid = null;\r\n        this.screen = new Screen(this.model, this.persistance);\r\n        this.lastLoadedScreen = null;\r\n\r\n        if (config.modalVoltar.active) {\r\n            var returnModal = new ReturnModal(window, document, config, this.loadFirst.bind(this));\r\n        }\r\n        else{\r\n            this.loadFirst();\r\n        }\r\n    }\r\n\r\n\r\n    loadFirst() {\r\n        console.log(\"Modo: \" + window.scorm.persistance.name);\r\n      \r\n        if(window.scorm.persistance.name == 'localStorage'){\r\n            this.scormReturn(true);\r\n        }else{\r\n            console.log(\"Iniciando busca da API SCORM.\");\r\n            do {\r\n                this.scormReturn(false);\r\n            } while (window.scorm.scorm.scorm.connection.isActive == false);\r\n        }\r\n\r\n        bridge.hiddeViewsFromReaderScreen = function() {\r\n            var elements = '*';\r\n        \r\n            $(elements).each(function() {\r\n                if ($(this).css(\"opacity\") == 0) {\r\n                    $(this).attr(\"aria-hidden\", \"true\");\r\n                } else {\r\n                    $(this).attr(\"aria-hidden\", \"false\");\r\n                }\r\n            });\r\n        };\r\n\r\n        bridge.fullScreenControll = function(full_element){\r\n            var elem = document.getElementById(\"main\");\r\n\r\n            $(full_element).attr(\"full\", \"close\");\r\n\r\n            $( full_element ).on('click', function(e) {\r\n                e.preventDefault();\r\n                if (document.fullscreenElement || document.webkitFullscreenElement || document.msFullscreenElement) {\r\n                    if (document.exitFullscreen) {\r\n                        document.exitFullscreen();\r\n                    } else if (document.webkitExitFullscreen) { /* Safari */\r\n                        document.webkitExitFullscreen();\r\n                    } else if (document.msExitFullscreen) { /* IE11 */\r\n                        document.msExitFullscreen();\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    if (elem.requestFullscreen) {\r\n                        elem.requestFullscreen();\r\n                    } else if (elem.webkitRequestFullscreen) { /* Safari */\r\n                        elem.webkitRequestFullscreen();\r\n                    } else if (elem.msRequestFullscreen) { /* IE11 */\r\n                        elem.msRequestFullscreen();\r\n                    }\r\n    \r\n                }\r\n            });\r\n\r\n             \r\n            if (document.addEventListener)\r\n            {\r\n                document.addEventListener('fullscreenchange', changeFullAtrrHandler, false);\r\n                document.addEventListener('mozfullscreenchange', changeFullAtrrHandler, false);\r\n                document.addEventListener('MSFullscreenChange', changeFullAtrrHandler, false);\r\n                document.addEventListener('webkitfullscreenchange', changeFullAtrrHandler, false);\r\n            }\r\n\r\n            function changeFullAtrrHandler()\r\n            {\r\n                if (!document.webkitIsFullScreen && !document.mozFullScreen && !document.msFullscreenElement)\r\n                {\r\n                    $(full_element).attr(\"full\", \"close\");\r\n                }else{\r\n                    $(full_element).attr(\"full\", \"open\");\r\n                }\r\n            }\r\n            \r\n        }\r\n\r\n\r\n\r\n        this.screen.current.loadPageEvents(this.screen.current);\r\n\r\n\r\n        \r\n        \r\n    }\r\n\r\n    scormReturn(localData) {\r\n        \r\n        if(window.scorm.scorm.scorm.connection.isActive == true || localData == true){\r\n\r\n            if(window.scorm.scorm.scorm.connection.isActive){\r\n                console.log(\"CONEXÃO ESTABELECIDA COM A API SCORM\");\r\n            }\r\n            this.current_uid = this.persistance.get(SCORM_API.LESSON_LOCATION) || null;\r\n            let firstScreen = this.screen.first();\r\n            if (typeof this.current_uid == 'string') {\r\n                firstScreen = this.screen.selectPage(this.current_uid);\r\n            }\r\n            this.loadScreen(firstScreen).then(() => {\r\n                firstScreen.element.classList.add('first-screen');\r\n                firstScreen.element.classList.remove('out');\r\n                firstScreen.element.classList.add('in');\r\n                $(window).trigger(VIEW_EVENT.READY);\r\n                firstScreen.enterView();\r\n            });\r\n          }\r\n    }\r\n\r\n    loadScreen(screen) {\r\n\r\n        if (this.children.length > LOADED_SCREEN_LIMIT) {\r\n            this.removeChildFirst();\r\n        }\r\n\r\n\r\n        return new Promise((res, rej) => {\r\n            \r\n            screen.render();\r\n            screen.element.classList.add('out');\r\n            var navigationDirection = \"\";\r\n\r\n            if(this.lastLoadedScreen != null){\r\n                var lastIndex = this.getPageIndexById(this.lastLoadedScreen.uid);\r\n\r\n                if(this.screen.index < lastIndex){\r\n                    navigationDirection = \"prev\";\r\n                }else if(this.screen.index > lastIndex){\r\n                    navigationDirection = \"next\";\r\n                }else{\r\n                    navigationDirection = \"notChanged\";\r\n                }\r\n            }else{\r\n                navigationDirection = \"first\";\r\n            }\r\n\r\n            screen.element.onload = () => {\r\n                \r\n                screen  \r\n                    .inject('navigate', {\r\n                        goto: this.goto.bind(this),\r\n                        next: this.next.bind(this),\r\n                        prev: this.prev.bind(this),\r\n                        currentScreen: this.screen,\r\n                        currentScreenUid: this.screen.model.pages[this.screen.index].uid,\r\n                        pagesTotal: this.screen.model.pages.length,\r\n                        pageIndexConfigPosition: this.screen.index,\r\n                        lastLoadedScreen: this.lastLoadedScreen,\r\n                        loadedDirection: navigationDirection\r\n                        \r\n                    })\r\n                    .inject('engine_config', {\r\n                        config: config,\r\n                    })\r\n                    .inject('scorm', this.persistance)\r\n                    .inject('bridge', bridge)\r\n                    .onready() \r\n                res(screen);\r\n            };\r\n            \r\n            this.appendChild(screen);\r\n        });\r\n        \r\n        \r\n    }\r\n\r\n    getPageIndexById(_id){\r\n        for (var i=0; i< config.pages.length;i++) {\r\n           if(_id ==  config.pages[i].uid){\r\n               return i;\r\n           }\r\n        }\r\n    }\r\n\r\n\r\n    goto(uid) {\r\n        let next = null;\r\n        let direction = true;\r\n        let current = this.screen.getCurrentScreen();\r\n\r\n        \r\n\r\n        this.lastLoadedScreen = current;\r\n\r\n        if(!_SCREEN_IS_LOADING){\r\n           \r\n            if (uid == \"_next\") {\r\n                next = this.screen.next();\r\n            } else if (uid == \"_prev\") {\r\n                next = this.screen.prev();\r\n                direction = false;\r\n            } else {\r\n                next = this.screen.selectPage(uid);\r\n            }\r\n            if (next && next.uid != current.uid) {\r\n                this.current_uid = next.model.uid;\r\n    \r\n                $(window).trigger(VIEW_EVENT.LOAD_START);\r\n                _SCREEN_IS_LOADING = true;\r\n                \r\n                \r\n                this.loadScreen(next).then(() => {\r\n                    current.exitView();\r\n                    next.enterView();\r\n                    this.updateSlidesStates(direction, current.element, next.element);\r\n                    this.persistance.set(SCORM_API.LESSON_LOCATION, next.model.uid);\r\n                    $(window).trigger({\r\n                        type: VIEW_EVENT.LOAD_END,\r\n                        screen: next\r\n                    });\r\n    \r\n                    _SCREEN_IS_LOADING = false;\r\n                    \r\n                });\r\n\r\n                next.loadPageEvents(next);\r\n               \r\n\r\n                return true;\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n\r\n\r\n    updateSlidesStates(avanca, currentSlide, nextSlide) {\r\n        \r\n        currentSlide.classList.remove('first-screen');\r\n        nextSlide.classList.remove('first-screen');\r\n        if (avanca) {\r\n            currentSlide.classList.add('in');\r\n        } else {\r\n            currentSlide.classList.remove('in');\r\n        }\r\n        currentSlide.classList.add('out');\r\n        nextSlide.classList.remove('out');\r\n        nextSlide.classList.add('in');\r\n    }\r\n\r\n    next() {\r\n        this.goto('_next');\r\n    }\r\n\r\n    prev() {\r\n        this.goto('_prev');\r\n    }\r\n}","class WaterMark {\r\n\r\n    constructor(_window, _document) {\r\n\r\n        this.window = _window;\r\n        this.document = _document;   \r\n    }\r\n    \r\n    addWaterMark() {\r\n        var waterMarkContainer = this.document.createElement('div');\r\n        var waterText = this.window.scorm.get('cmi.core.student_id');\r\n        var index_base = 2;\r\n\r\n        $(this.document.body).append(waterMarkContainer);\r\n        $(waterMarkContainer).css(\r\n            {\r\n                \"width\": \"103vw\",\r\n                \"height\": \"100vh\",\r\n                \"position\": \"fixed\",\r\n                \"top\": \"0\",\r\n                \"left\": \"0\",\r\n                \"opacity\": \"0.05\",\r\n                \"pointer-events\" : \"none\",\r\n                \"z-index\": index_base,\r\n                \r\n            }\r\n        );\r\n\r\n        for (var i = 0; i < 4200; i++) {\r\n            $(waterMarkContainer).append(waterText + \" \");\r\n        }\r\n\r\n        var arrObjectsToDeph = $(this.document).find('p,h1,h2,h3,h4,h5,i,b,stronger, a, .container-slides, .container-item-card, video, audio, .component-template-header, .container-accordeon, .container-timeline, .exercise-memory, .remove_waterMark');\r\n        arrObjectsToDeph = arrObjectsToDeph.get().reverse();\r\n\r\n\r\n        $(arrObjectsToDeph).each(function(){\r\n\r\n            if($(this).css(\"position\") != \"absolute\" && $(this).css(\"position\") != \"fixed\"){\r\n                $(this).css(\r\n                    {\r\n                        \"position\": \"relative\",\r\n                        \"z-index\": index_base++\r\n                    }\r\n                );\r\n            }\r\n            else{\r\n                $(this).css(\r\n                    {\r\n                        \"z-index\": index_base++\r\n                    }\r\n                );\r\n            }\r\n            \r\n        });        \r\n\r\n    };\r\n\r\n    getMaxZIndex() {\r\n        return Math.max(\r\n          ...Array.from(this.document.querySelectorAll('body *'), el =>\r\n            parseFloat(this.window.getComputedStyle(el).zIndex),\r\n          ).filter(zIndex => !Number.isNaN(zIndex)),\r\n          0,\r\n        );\r\n      }\r\n      \r\n\r\n}"]}